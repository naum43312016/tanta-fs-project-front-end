[{"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js":"1","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js":"2","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js":"3","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js":"4","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx":"5","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx":"6","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx":"7","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx":"8","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx":"9","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx":"10","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/URLs.js":"11","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js":"12","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx":"13","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx":"14","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx":"15","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx":"16","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx":"17","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js":"18","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/UserCoins.js":"19"},{"size":554,"mtime":1610909759769,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610736072307,"results":"22","hashOfConfig":"21"},{"size":2119,"mtime":1611486529847,"results":"23","hashOfConfig":"21"},{"size":85,"mtime":1611003624734,"results":"24","hashOfConfig":"21"},{"size":2209,"mtime":1611412141122,"results":"25","hashOfConfig":"21"},{"size":2411,"mtime":1611486310428,"results":"26","hashOfConfig":"21"},{"size":721,"mtime":1611486561332,"results":"27","hashOfConfig":"21"},{"size":1483,"mtime":1611490931255,"results":"28","hashOfConfig":"21"},{"size":3540,"mtime":1611484359591,"results":"29","hashOfConfig":"21"},{"size":5039,"mtime":1611416398551,"results":"30","hashOfConfig":"21"},{"size":241,"mtime":1611416398554,"results":"31","hashOfConfig":"21"},{"size":2576,"mtime":1611413425822,"results":"32","hashOfConfig":"21"},{"size":4838,"mtime":1611487470705,"results":"33","hashOfConfig":"21"},{"size":2380,"mtime":1610964774622,"results":"34","hashOfConfig":"21"},{"size":2343,"mtime":1611416398551,"results":"35","hashOfConfig":"21"},{"size":6164,"mtime":1611416398551,"results":"36","hashOfConfig":"21"},{"size":1941,"mtime":1611486779949,"results":"37","hashOfConfig":"21"},{"size":3029,"mtime":1611416398554,"results":"38","hashOfConfig":"21"},{"size":75,"mtime":1611442212153,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"137pv15",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js",[],["85","86"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js",["87"],"import React, { useState, useEffect } from 'react';\nimport { Authentication } from './Contexts/Authentication';\nimport { UserCoins } from './Contexts/UserCoins'\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './Styles/App.css';\nimport Home from './Components/HomePage/Home';\nimport ProfileSettings from './Components/Profile/ProfileSettings';\nimport TopNavBar from './Components/NavBars/TopNavBar';\nimport MyItems from './Components/Profile/MyItems'\nimport AddItem from './Components/ItemPage/AddItem'\nimport ItemPage from './Components/ItemPage/ItemPage';\nimport axios from 'axios';\nimport BASE_URL from './Tools/URLs';\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false)\n  const [userCoins, setUserCoins] = useState(0)\n  const token = localStorage.getItem('token') || null\n  const sessionID = localStorage.getItem('sessionID')\n\n  const updateCoins = async () => {\n    await axios.get(`${BASE_URL}/user/${sessionID}`)\n    .then(res => {\n        setUserCoins(res.data.coins)\n    })\n  }\n\n  useEffect(() => {\n    if(token) setAuthenticated(true)\n    axios.get(`${BASE_URL}/user/${sessionID}`)\n    .then(res => {\n        setUserCoins(res.data.coins)\n    })\n    .catch(err=>console.error(err))\n  }, [token, userCoins])\n\n  return (\n    <Container fluid>\n      <Authentication.Provider value={{ authenticated, setAuthenticated }}>\n        <UserCoins.Provider value={{userCoins, setUserCoins, updateCoins }}>\n        <Router>\n          <TopNavBar coins={userCoins && userCoins}/>\n          <Switch>\n              <Route path=\"/add-item\" component={AddItem}/>\n              <Route path=\"/my-items\" component={MyItems}/>\n              <Route path=\"/settings\" component={ProfileSettings} />\n              <Route path=\"/item/:id\">\n                <ItemPage coins={userCoins} setUserCoins={setUserCoins}/>  \n              </Route>\n              <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n        </UserCoins.Provider>\n      </Authentication.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx",["88"],"import { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react'\nimport {Container,Form, Input, Button} from 'reactstrap'\nimport '../../Styles/ProfileSettings.css'\nimport BASE_URL from '../../Tools/URLs';\n\nconst ProfileSettings = () => {\n    const [profileInfos, setProfileInfos] = useState(null)\n    const userID = localStorage.getItem('sessionID')\n\n    const handleChange = (e) => {\n        setProfileInfos({\n            ...profileInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/user/${userID}`)\n        .then(res => setProfileInfos(res.data))\n    }, [])\n\n    return (\n        <Container>\n            <div className=\"coins-div\">\n                <div><FontAwesomeIcon icon={faCoins} size=\"3x\" color=\"#FFD700\"/> </div>\n                <div className=\"coin-number\"> {profileInfos && profileInfos.coins} </div>\n            </div>\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\n                <h3>Profile settings</h3>\n                <div className=\"user-coins\"> </div>\n                <Input className=\"settings-input\" name=\"firstName\" placeholder=\"First Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.firstName}/>\n                <Input className=\"settings-input\" name=\"lastName\" placeholder=\"Last Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.lastName}/>\n                <Input className=\"settings-input\" type=\"text\" name=\"address\" placeholder=\"Address\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.address}/>\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.phone}/>\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.email}/>\n                <Button color=\"light\" > Save </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default ProfileSettings","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx",["89","90","91","92"],"import React, { useEffect, useState } from 'react';\nimport Filter from './Filter';\nimport ItemCard from './ItemCards';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\nimport BASE_URL from '../../Tools/URLs';\n\nconst Home = () => {\n    const [search, setSearch] = useState('');\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState('');\n    const [cards, setCards] = useState([]);\n    const [updateCards, setUpdateCards] = useState(false)\n\n    const getCards = async () => {\n        await axios.get(BASE_URL + '/home/get-all-items')\n        .then(res => {\n            const availableCards = []\n            res.data.forEach(item => {\n                if(item.status == 'available') {\n                    availableCards.push(item)\n                }\n            })\n            setCards(availableCards)\n        })\n        .catch(err => 'There was an issue fetching all the items');\n    }\n\n    useEffect(() => { //getting all items on first app render\n            getCards()\n    }, [updateCards, !updateCards])\n\n    useEffect(async() => { //fetching the right category\n        await axios.get(BASE_URL + `/search/item?category=${category}&price=${price}&name=${search}`)\n            .then(res => {\n                const availableCards = []\n                res.data.items.forEach(item => {\n                    if(item.status == 'available') {\n                        availableCards.push(item)\n                    }\n                })\n                setCards(availableCards)\n            })\n            .catch(err => console.log('There was an issue fetching the items of the requested category'));\n    }, [category, price, search])\n\n    return (\n        <div>\n            <Filter category={category} setCategory={setCategory} setPrice={setPrice} setSearch={setSearch} />\n            <div className=\"category-title\">\n                <p className=\"mr-sm-5 mr-3\">{category === \"\" && price === \"\" ? \"All Items\" : category}</p>\n                {price === '' ? null : <>{category !== \"\" ? <p className=\"mr-sm-5 mr-3\">|</p> : null}<p>{price} <FontAwesomeIcon style={{ color: \"orange\", fontSize: \"20px\" }} icon={faCoins} /></p></>}\n            </div>\n            <ItemCard cards={cards} setUpdateCards={setUpdateCards} updateCards={updateCards}/>\n        </div>\n    )\n}\n\nexport default Home;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx",["93","94","95","96"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Row, Button, Modal } from 'reactstrap';\nimport { Authentication } from '../../Contexts/Authentication';\nimport { Link, Route } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog, faCoins, faHome, faPlus, faUser } from '@fortawesome/free-solid-svg-icons'\nimport SignUp from '../LoginPage/SignUp';\nimport Login from '../LoginPage/Login';\nimport { confirmLogout } from '../../Tools/WebsiteResponses';\nimport { UserCoins } from '../../Contexts/UserCoins'\nimport axios from 'axios';\nimport BASE_URL from '../../Tools/URLs';\n\nconst TopNavBar = (props) => {\n    const [openLogin, setOpenLogin] = useState(false);\n    const [openSignup, setOpenSignup] = useState(false);\n\n    const { authenticated, setAuthenticated } = useContext(Authentication)\n\n\n    return (\n        <>\n            <Row className=\"top-navbar\">\n                <Link style={{textDecoration:\"none\"}} className=\"offset-1 col-4 tanta-logo\" to='/'>\n                    <h3 className=\"logo mt-2 pl-2\">Tanta</h3>\n                </Link>\n                {authenticated ?\n                    <>   \n                        <div style={{marginRight: '10px'}}> \n                            <span style={{ color: \"white\", fontWeight:\"500\",fontSize: \"20px\"}}>{props.coins}</span> <FontAwesomeIcon style={{ color: \"#ffd700\", height: \"25px\"}} icon={faCoins} size=\"2x\"></FontAwesomeIcon>\n                        </div>\n                        <Link to={\"/\"}>\n                            <FontAwesomeIcon style={{ color: \"white\", height: \"25px\" }} icon={faHome} size=\"2x\" ></FontAwesomeIcon>\n                        </Link>\n                        <Link to={\"/add-item\"}>\n                            <FontAwesomeIcon style={{ color: \"white\", height: \"25px\" }} icon={faPlus} size=\"2x\" ></FontAwesomeIcon>\n                        </Link>\n                        <Link to={\"/my-items\"}>\n                            <FontAwesomeIcon style={{ color: \"white\", height: \"25px\" }} icon={faUser} size=\"2x\" ></FontAwesomeIcon>\n                        </Link>\n                        <Link to=\"/settings\">\n                            <FontAwesomeIcon style={{ color: \"white\", height: \"25px\" }} icon={faCog} size=\"2x\"></FontAwesomeIcon>\n                        </Link>                       \n                        <Button onClick={() => confirmLogout(setAuthenticated, setOpenSignup)} color=\"light\" className=\"nav-button rounded\">Logout</Button>\n                    </>\n                    :\n                    <>\n                        <Link to=\"/login\">\n                            <Button color=\"light\" className=\"nav-button rounded\" onClick={() => setOpenLogin(true)}>Login/Signup</Button>\n                        </Link>\n                        <Modal isOpen={openLogin} className=\"login-modal\">\n                            <Route path=\"/login\">\n                                <Login setOpenLogin={(bool) => setOpenLogin(bool)} setOpenSignup={(bool) => setOpenSignup(bool)} />\n                            </Route>\n                        </Modal>\n                        <Modal isOpen={openSignup} className=\"signup-modal\">\n                            <SignUp setOpenSignup={(bool) => setOpenSignup(bool)} setOpenLogin={(bool) => setOpenLogin(bool)} />\n                        </Modal>\n                    </>\n                }\n            </Row>\n            <Row style={{ backgroundColor: \"#7AE582\", height: \"30px\" }} />\n            </>\n    )\n}\n\nexport default TopNavBar;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx",["97"],"import { faCamera} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport {Container,Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport '../../Styles/AddItem.css'\nimport { invalidFields } from '../../Tools/WebsiteResponses';\nimport { itemUploaded } from '../../Tools/WebsiteResponses';\nimport {Redirect} from 'react-router'\nimport BASE_URL from '../../Tools/URLs';\n\nconst AddItem = () => {\n    const [itemInfos, setItemInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [categories, setCategories] = useState({categories: null, selected: null})\n    const [pic, setPic] = useState({selectedFile: null})\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setItemInfos({\n            ...itemInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n    const imageUploadStyle = {\n        color: \"#4a81ff\", \n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setCategories({...categories, selected: e.target.value})\n        setItemInfos({...itemInfos, category: e.target.value})\n    }\n\n    const postItem = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for(let key in itemInfos) {\n            data.append(key, itemInfos[key])\n        }\n        if(pic.selectedFile) {\n            data.append('image', pic.selectedFile, `${Date.now()}-${pic.selectedFile.name}`)\n        }\n        axios.post(`${BASE_URL}/item`, data, {headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}})\n            .then(itemUploaded())\n            .then(setRedirect(true)) // if success so set success & redirect to homepage\n            .catch(err => {\n                // fetch error message from server\n                const error = err.response.data \n                const errorMessages = error.message || error.category || error.name || error.condition || error.description || error.price \n                invalidFields(errorMessages) // else show error message\n            })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/category/all`)\n        .then(res => setCategories({...categories, categories: res.data}))\n        .catch(err => console.error(err))\n    }, [])\n\n    if(redirect) {\n        return (\n            <Redirect to={BASE_URL}/>\n        )\n    }\n    return (\n        <Container>\n        <Form action=\"\" className=\"add-item-form\" onSubmit={e=> postItem(e)} encType=\"multipart/form-data\">\n            <input type=\"file\" ref={ref} id=\"hidden\" onChange={(e) => {     \n                const file = e.target.files[0]\n                const reader = new FileReader()\n                reader.onload = (e) => {\n                    setPreviewPic(e.target.result)\n                }\n                reader.readAsDataURL(file)\n                setPic({selectedFile :e.target.files[0]})\n                } }/>\n            <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera}/></div>\n            {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret color=\"light\">\n                    {(categories.categories && categories.selected) || 'Category'} {/* Setting the select name based on selected category  */}\n                </DropdownToggle>\n                <DropdownMenu >\n                    {categories.categories && categories.categories.map((category, index) => (\n                        <DropdownItem key={index} onClick={handleSelect} value={category.name}> {category.name} </DropdownItem>\n                    ))}\n                </DropdownMenu>\n        </Dropdown>\n            <Input className=\"add-item-input\" name=\"name\" placeholder=\"Name of product\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" type=\"select\" name=\"condition\" onChange={e => handleChange(e)}>\n                <option value=\"condition\" disabled selected>Condition</option>\n                <option value=\"new\">New</option>\n                <option value=\"likeNew\">Like new</option>\n                <option value=\"good\">Good</option>\n                <option value=\"used\">Used</option>               \n            </Input>\n            <Input className=\"add-item-input\" type=\"number\" name=\"price\" placeholder=\"Price\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"description\" placeholder=\"Description\" onChange={e => handleChange(e)}/>\n            <Button color=\"light\" type=\"submit\"> Add an item </Button>\n        </Form>\n    </Container>\n    )\n}\n\nexport default AddItem","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/URLs.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx",["98","99","100","101"],"import React, { useEffect, useState } from 'react';\nimport { Row, CardBody, CardTitle, CardSubtitle, CardText } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as regularHeart } from \"@fortawesome/fontawesome-free-regular\";\n\nconst ItemCard = (props) => {\n    const [favoriteItems, setFavoriteItems] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"sessionID\"));\n    const [toggleFav, setToggle] = useState(true) // to rerender the page when add/remove favourite\n\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n    const userToken = { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') } }\n    \n    const addItemToFavorites = async(item) => {\n        await axios.post(BASE_URL + `/item/${item._id}/favorite`, '', userToken)\n            .then(console.log(\"Saved the item as favorite\"))\n            .catch(err => console.log(\"Couldn't save the item as favorite\"));\n        await axios.get(`${BASE_URL}/user/favorites`, userToken)\n        .then(res => res.data)\n        .then(res => setFavoriteItems(res))\n        setToggle(!toggleFav)\n    }\n\n    const removeItemFromFavorites = async (item) => {\n        await axios.delete(`${BASE_URL}/item/${item._id}/favorite`, userToken)\n            .then(console.log(\"Unsaved the item\"))\n            .catch(err => console.log(\"Couldn't unsave the item\"));\n        await axios.get(`${BASE_URL}/user/favorites`, userToken)\n            .then(res => res.data)\n            .then(res => setFavoriteItems(res))\n        setToggle(!toggleFav)\n\n    }\n\n    useEffect(async () => {\n        if (loggedIn != null) {\n            await axios.get(`${BASE_URL}/user/favorites`, userToken)\n                .then(res => setFavoriteItems(res.data))\n                .catch(err => console.log(\"Couldn't get user favorites\"))\n        }\n    }, [toggleFav, !toggleFav])\n\n    return (\n        <div>\n            <div style={{ width: \"80%\", marginLeft: \"10%\" }} className=\"card-container mt-5 mb-5\">\n                {props.cards.map((item) => {\n                    return (<div key={item._id} id={item._id} style={{ backgroundColor: \"#F7F7F7\" }}>\n                        <Link to={{ pathname: `/item/${item._id}`, state: item._id }}  >\n                            <div style={{ width: \"100%\", height: \"200px\", backgroundImage: `url(${item.imageUrl})` }} className=\"card-img\" top=\"true\" width=\"100%\" alt={item.name} />\n                        </Link>\n                        <CardBody className=\"overflow-dots\">\n                            <Row>\n                                <CardTitle tag=\"h5\" className=\"col-10\">{item.name}</CardTitle>\n                                <p>{item.price} <FontAwesomeIcon style={{ color: \"orange\", fontSize: \"20px\" }} icon={faCoins} /></p>\n                            </Row>\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{item.condition}</CardSubtitle>\n                            <CardText style={{ wordBreak: \"break-word\" }}>{item.description}</CardText>\n                            {loggedIn &&\n                                <footer>\n                                    <div className=\"align-items-center justify-content-end d-flex\">\n                                        {!favoriteItems.includes(`${item._id}`) \n                                        ?<>\n                                         <p style={{ fontSize: \"18px\", margin: \"0\" }} className=\"mr-2\">Save</p> \n                                          <FontAwesomeIcon color=\"red\" style={{ cursor: \"pointer\", fontSize: \"25px\" }} \n                                            onClick={() => addItemToFavorites(item)} className=\"mr-2 awesome-icon\" icon={regularHeart}>\n                                          </FontAwesomeIcon> \n                                          </>\n                                        :<>\n                                         <p style={{ fontSize: \"18px\", margin: \"0\" }} className=\"mr-2\">Unsave</p>\n                                          <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"25px\" }} color=\"red\" \n                                            onClick={() => removeItemFromFavorites(item)} className=\" awesome-icon\" icon={solidHeart}>\n                                          </FontAwesomeIcon>\n                                          </>}\n                                    </div>\n                                </footer>\n                            }\n                        </CardBody>\n                    </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default ItemCard;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/UserCoins.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":36,"column":6,"nodeType":"108","endLine":36,"endColumn":24,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":23,"column":8,"nodeType":"108","endLine":23,"endColumn":10,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":21,"column":32,"nodeType":"114","messageId":"115","endLine":21,"endColumn":34},{"ruleId":"106","severity":1,"message":"116","line":32,"column":22,"nodeType":"117","endLine":32,"endColumn":34},{"ruleId":"106","severity":1,"message":"118","line":34,"column":15,"nodeType":"119","endLine":46,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":39,"column":36,"nodeType":"114","messageId":"115","endLine":39,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":1,"column":29,"nodeType":"122","messageId":"123","endLine":1,"endColumn":38},{"ruleId":"120","severity":1,"message":"124","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":19},{"ruleId":"120","severity":1,"message":"125","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":13},{"ruleId":"120","severity":1,"message":"126","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":16},{"ruleId":"106","severity":1,"message":"127","line":64,"column":8,"nodeType":"108","endLine":64,"endColumn":10,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"129","line":12,"column":22,"nodeType":"122","messageId":"123","endLine":12,"endColumn":33},{"ruleId":"106","severity":1,"message":"118","line":39,"column":15,"nodeType":"119","endLine":45,"endColumn":6},{"ruleId":"106","severity":1,"message":"130","line":45,"column":8,"nodeType":"108","endLine":45,"endColumn":31,"suggestions":"131"},{"ruleId":"106","severity":1,"message":"116","line":45,"column":20,"nodeType":"117","endLine":45,"endColumn":30},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionID'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UserCoins' is defined but never used.","'axios' is defined but never used.","'BASE_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array. You can also do a functional update 'setCategories(c => ...)' if you only need 'categories' in the 'setCategories' call.",["136"],"'setLoggedIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'BASE_URL', 'loggedIn', and 'userToken'. Either include them or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [sessionID, token, userCoins]",{"range":"146","text":"147"},"Update the dependencies array to be: [userID]",{"range":"148","text":"149"},"Update the dependencies array to be: [categories]",{"range":"150","text":"151"},"Update the dependencies array to be: [BASE_URL, loggedIn, toggleFav, userToken]",{"range":"152","text":"153"},[1299,1317],"[sessionID, token, userCoins]",[761,763],"[userID]",[2582,2584],"[categories]",[2071,2094],"[BASE_URL, loggedIn, toggleFav, userToken]"]