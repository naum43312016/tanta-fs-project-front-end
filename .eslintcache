[{"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\index.js":"1","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\App.js":"3","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Contexts\\Authentication.js":"4","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\NavBars\\TopNavBar.jsx":"5","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Home.jsx":"6","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\LoginPage.jsx":"7","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\ProfileSettings.jsx":"8","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\SignUp.jsx":"9","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Filter.jsx":"10","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\ItemCard.jsx":"11","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\SearchBar.jsx":"12","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Login.jsx":"13","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\fetch.js":"14","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\WebsiteResponses.js":"15","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\MyItems.jsx":"16","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Logout.jsx":"17"},{"size":572,"mtime":1610804209849,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1610621832781,"results":"20","hashOfConfig":"19"},{"size":1337,"mtime":1610809988592,"results":"21","hashOfConfig":"19"},{"size":89,"mtime":1610753082839,"results":"22","hashOfConfig":"19"},{"size":2573,"mtime":1610813097259,"results":"23","hashOfConfig":"19"},{"size":347,"mtime":1610728451388,"results":"24","hashOfConfig":"19"},{"size":2878,"mtime":1610641987735,"results":"25","hashOfConfig":"19"},{"size":1264,"mtime":1610804134848,"results":"26","hashOfConfig":"19"},{"size":6448,"mtime":1610753002268,"results":"27","hashOfConfig":"19"},{"size":2460,"mtime":1610813150737,"results":"28","hashOfConfig":"19"},{"size":3709,"mtime":1610802414490,"results":"29","hashOfConfig":"19"},{"size":466,"mtime":1610812944267,"results":"30","hashOfConfig":"19"},{"size":2467,"mtime":1610803833832,"results":"31","hashOfConfig":"19"},{"size":3252,"mtime":1610753002270,"results":"32","hashOfConfig":"19"},{"size":2050,"mtime":1610754464442,"results":"33","hashOfConfig":"19"},{"size":855,"mtime":1610804127507,"results":"34","hashOfConfig":"19"},{"size":987,"mtime":1610753002267,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"173es2g",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\index.js",[],["78","79"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\App.js",["80","81","82"],"import React, { useState, useEffect } from 'react';\r\nimport { Authentication } from './Contexts/Authentication';\r\nimport { Container, Navbar } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './Styles/App.css';\r\nimport Home from './Components/HomePage/Home';\r\nimport ProfileSettings from './Components/Profile/ProfileSettings';\r\nimport TopNavBar from './Components/NavBars/TopNavBar';\r\nimport MyItems from './Components/Profile/MyItems'\r\n\r\nconst App = () => {\r\n  const [authenticated, setAuthenticated] = useState(false); // true just for now\r\n  const [adminConfirmation, setAdminConfirmation] = useState(false);\r\n  const token = localStorage.getItem('token') || null\r\n\r\n  useEffect(() => {\r\n    if(token) {\r\n      setAuthenticated(true)\r\n    }\r\n  }, [token])\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Authentication.Provider value={{ authenticated, setAuthenticated }}>\r\n        <Router>\r\n          <TopNavBar />\r\n          <Switch>\r\n              <Route path=\"/my-items\" component={MyItems}/>\r\n              <Route path=\"/settings\" component={ProfileSettings} />\r\n              <Route path=\"/item\" />\r\n              <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Router>\r\n      </Authentication.Provider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Contexts\\Authentication.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\NavBars\\TopNavBar.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Home.jsx",["83"],"import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport Filter from './Filter';\r\nimport ItemCard from './ItemCard';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <SearchBar />\r\n            <Filter />\r\n            <ItemCard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\LoginPage.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\ProfileSettings.jsx",["84"],"import { useState } from 'react'\r\nimport {Container,Form, Input, Button} from 'reactstrap'\r\nimport '../../Styles/ProfileSettings.css'\r\nimport { submitProfileChanges } from '../../Tools/fetch';\r\n\r\nconst ProfileSettings = () => {\r\n    const [profileInfos, setProfileInfos] = useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        setProfileInfos({\r\n            ...profileInfos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\r\n                <h3>Profile settings</h3>\r\n                <Input className=\"settings-input\" name=\"firstname\" placeholder=\"First Name\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" name=\"lastname\" placeholder=\"Last Name\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)}/>\r\n                <Button color=\"light\" > Save </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileSettings","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\SignUp.jsx",["85","86","87","88"],"import React, { useEffect } from \"react\";\r\nimport { Form, Container, Row, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { Signup } from '../../Tools/fetch';\r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { invalidFields } from '../../Tools/WebsiteResponses';\r\n\r\nconst SignUp = (props) => {\r\n  const [userInfos, setUserInfos] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    userName: '',\r\n    address: '',\r\n    confirmPassword: '',\r\n  })\r\n  const { setAuthenticated } = useContext(Authentication);\r\n\r\n  const switchToLogin = () => {\r\n    props.setOpenSignup(false);\r\n    props.setOpenLogin(true);\r\n    setUserInfos(null)\r\n  };\r\n\r\n  const submitUser = () => {\r\n    if (userInfos.password === userInfos.confirmPassword) {\r\n    const userDetails = {...userInfos}\r\n    Signup(userDetails, setAuthenticated);\r\n    } else {\r\n      invalidFields(\"Passwords didn't match\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUserInfos({\r\n      ...userInfos,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    console.log(setAuthenticated)\r\n  }, [])\r\n\r\n  return (\r\n        <Container>\r\n              <Row className=\"d-flex justify-content-end\">\r\n                <Link to=\"/home\">\r\n                <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenSignup(false)}>\r\n                  X\r\n                </Button>\r\n                </Link>\r\n              </Row>\r\n              <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Create Account</ModalHeader>\r\n              <ModalBody>\r\n                <Form>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <FormGroup>\r\n                      <Label for=\"firstName\">First Name <span style={{color: \"red\"}}>*</span></Label>\r\n                      <Input\r\n                      required\r\n                        onChange={(event) => handleChange(event)}\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstname\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"ml-3\" for=\"lastName\">\r\n                        Last Name <span style={{color: \"red\"}}>*</span>\r\n                      </Label>\r\n                      <Input\r\n                      required\r\n                        className=\"ml-3\"\r\n                        onChange={(event) => handleChange(event)}\r\n                        type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastname\"\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <FormGroup>\r\n                    <Label for=\"email\">Email <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"example@something.com\"\r\n                      id=\"email\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"username\">Username <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      placeholder=\"Please choose a username\"\r\n                      id=\"username\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"address\">Address <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      placeholder=\"Enter your address\"\r\n                      id=\"address\"\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup>\r\n                    <Label for=\"password\">Password <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"min 8 char, 1 special char, 1 capital letter\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"password-confirm\">Confirm Password <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"password\"\r\n                      name=\"confirmPassword\"\r\n                      id=\"confirmPassword\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"phone\">Phone Number <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      id=\"phoneNumber\"\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                  <Button color=\"primary\" disabled={(userInfos.firstName.length > 0 && userInfos.lastName.length > 0 && userInfos.email.length > 0 && userInfos.password.length > 0 && userInfos.confirmPassword.length > 0 && userInfos.phone.length > 0) ? false : true} onClick={submitUser} color=\"success\">\r\n                    Sign Up\r\n                  </Button>\r\n                  <Link to=\"/login\">\r\n                  <Button color=\"primary\" onClick={switchToLogin} color=\"success\">\r\n                    I Already Have An Account\r\n                  </Button>\r\n                  </Link>\r\n              </ModalFooter>\r\n            </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Filter.jsx",["89","90","91","92","93","94","95"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\ItemCard.jsx",["96","97","98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Card, CardBody, CardTitle, CardSubtitle, CardText, CardImg, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Pic from \"./971c17c93f74bc7280e285153b2e1ace-700.jpg\";\r\nimport axios from 'axios';\r\n\r\nconst ItemCard = () => {\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/item')\r\n        .then(res => console.log(res))\r\n        .catch(err => null);\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ width: \"80%\", marginLeft: \"10%\" }} className=\"card-container mt-5 mb-5\">\r\n            <Card>\r\n                <Link to=\"/item\">\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                </Link>\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                <CardBody className=\"overflow-dots\">\r\n                    <CardTitle tag=\"h5\">Item</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\SearchBar.jsx",["101"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Login.jsx",["102","103","104"],"import React, { useEffect } from \"react\";\r\nimport { Container, Form, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter, Row } from \"reactstrap\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { SignIn } from '../../Tools/fetch';\r\nimport { Authentication } from '../../Contexts/Authentication';\r\n\r\nconst Login = (props) => {\r\n  const { authenticated, setAuthenticated }  = useContext(Authentication);\r\n  const [userInfos, setUserInfos] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const switchToSignUp = () => {\r\n    props.setOpenLogin(false);\r\n    props.setOpenSignup(true);\r\n    setUserInfos({\r\n      ...userInfos,\r\n      email: '',\r\n      password: '',\r\n    })\r\n    };\r\n  \r\n  const handleChange = (event) => {\r\n    setUserInfos({\r\n      ...userInfos,\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  const LoginUser = () => {\r\n    const userDetails = { ...userInfos, role: \"USER_STATUS\" }\r\n    SignIn(userDetails, setAuthenticated)\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"d-flex justify-content-end\">\r\n        <Link to=\"/home\">\r\n          <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenLogin(false)}>\r\n            X\r\n        </Button>\r\n        </Link>\r\n      </Row>\r\n    <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Login</ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              onChange={(event) => handleChange(event)}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"example@something.com\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              onChange={(event) => handleChange(event)}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={LoginUser} color=\"success\">\r\n          Login\r\n          </Button>\r\n        <Link to=\"/signup\">\r\n          <Button onClick={switchToSignUp} color=\"success\">\r\n            I Don't Have An Account Yet\r\n          </Button>\r\n        </Link>\r\n      </ModalFooter>\r\n\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\fetch.js",["105"],"const axios = require('axios');\r\n\r\nconst { invalidFields, wrongCredentials, signUpSucces, signInSuccess, updatedProfile } = require('./WebsiteResponses');\r\n\r\nconst base_URL = \"http://localhost:3001\";\r\n\r\nconst validateEmail = (email) => {\r\n  const re = /\\S+@\\S+\\.\\S+/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst validatePassword = (password) => {\r\n  const re = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\r\n  return re.test(password);\r\n}\r\n\r\nconst checkFields = (userDetails) => {\r\n  const { firstName, lastName, email, password, phone } = userDetails;\r\n  if (firstName.length <= 2 || lastName.length <= 2) {\r\n    return invalidFields('First and last name should contain at least 2 characters');\r\n  }\r\n  if (!validateEmail(email)) {\r\n    return invalidFields(\"Please use a valid email address\");\r\n  }\r\n  if (!validatePassword(password)) {\r\n    return invalidFields(\"Your password must have a minimum of 8 characters including at least one number\")\r\n  }\r\n  if (phone.length < 10) {\r\n    return invalidFields(\"Please enter a valid phone number\")\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nconst Signup = (userDetails, setAuthenticated) => {\r\n  if (checkFields(userDetails) === true) {\r\n    return axios.post(`${base_URL}/signup`, userDetails)\r\n      .then(\r\n        (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signUpSucces(), localStorage.setItem('firstName', res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\r\n                  setAuthenticated(true)) : null\r\n      )\r\n      .catch(err => console.error(err))\r\n  }\r\n};\r\n\r\nconst SignIn = (userDetails, setAuthenticated) => {\r\n  return axios.post(`${base_URL}/login`, userDetails)\r\n    .then(\r\n      (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signInSuccess(), localStorage.setItem(\"firstName\", res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\r\n      setAuthenticated(true)) : null\r\n    )\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\n\r\nconst getCookies = (setAuthenticated) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = { headers: { Authorization: \"Bearer \" + token } }\r\n  return axios.get(base_URL + \"/\", config)\r\n    .then(res =>\r\n      res.status === 200\r\n        ? (setAuthenticated(true))\r\n        : console.log(\"Couldn't authenticate\")\r\n    )\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst checkForAdmin = (setState, bool, bool2) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = { headers: { Authorization: \"Bearer \" + token } }\r\n  axios.get(base_URL +  '/upload', config)\r\n    .then(res => setState(bool))\r\n    .catch(err => setState(bool2))\r\n}\r\n\r\nconst submitProfileChanges = (details, userDocument) => {\r\n  if (checkFields(details) === true) {\r\n    console.log('ho')\r\n    axios.put(base_URL + `/profile/${userDocument._id}`, {\r\n      details\r\n    })\r\n      .then(res => updatedProfile(\"Profile updated\", \"success\"))\r\n      .catch(err => updatedProfile(\"There was an issue updating your profile\", \"error\"));\r\n  }\r\n}\r\n\r\nexport {  Signup, \r\n          SignIn, \r\n          getCookies, \r\n          validateEmail, \r\n          validatePassword, \r\n          checkForAdmin, \r\n          submitProfileChanges,\r\n        }\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\WebsiteResponses.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\MyItems.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Logout.jsx",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":21,"nodeType":"114","messageId":"115","endLine":3,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":13,"column":10,"nodeType":"114","messageId":"115","endLine":13,"endColumn":27},{"ruleId":"112","severity":1,"message":"117","line":13,"column":29,"nodeType":"114","messageId":"115","endLine":13,"endColumn":49},{"ruleId":"112","severity":1,"message":"118","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"119","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":30},{"ruleId":"112","severity":1,"message":"120","line":4,"column":16,"nodeType":"114","messageId":"115","endLine":4,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":46,"column":6,"nodeType":"123","endLine":46,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":153,"column":289,"nodeType":"127","endLine":153,"endColumn":304},{"ruleId":"125","severity":1,"message":"126","line":157,"column":67,"nodeType":"127","endLine":157,"endColumn":82},{"ruleId":"112","severity":1,"message":"128","line":3,"column":22,"nodeType":"114","messageId":"115","endLine":3,"endColumn":28},{"ruleId":"112","severity":1,"message":"129","line":3,"column":30,"nodeType":"114","messageId":"115","endLine":3,"endColumn":38},{"ruleId":"112","severity":1,"message":"130","line":3,"column":40,"nodeType":"114","messageId":"115","endLine":3,"endColumn":54},{"ruleId":"112","severity":1,"message":"131","line":3,"column":56,"nodeType":"114","messageId":"115","endLine":3,"endColumn":68},{"ruleId":"112","severity":1,"message":"132","line":3,"column":70,"nodeType":"114","messageId":"115","endLine":3,"endColumn":82},{"ruleId":"121","severity":1,"message":"133","line":21,"column":8,"nodeType":"123","endLine":21,"endColumn":10,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"133","line":27,"column":8,"nodeType":"123","endLine":27,"endColumn":18,"suggestions":"135"},{"ruleId":"112","severity":1,"message":"136","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":19},{"ruleId":"112","severity":1,"message":"118","line":2,"column":21,"nodeType":"114","messageId":"115","endLine":2,"endColumn":24},{"ruleId":"112","severity":1,"message":"128","line":2,"column":86,"nodeType":"114","messageId":"115","endLine":2,"endColumn":92},{"ruleId":"112","severity":1,"message":"137","line":8,"column":12,"nodeType":"114","messageId":"115","endLine":8,"endColumn":17},{"ruleId":"112","severity":1,"message":"138","line":8,"column":19,"nodeType":"114","messageId":"115","endLine":8,"endColumn":27},{"ruleId":"112","severity":1,"message":"139","line":5,"column":12,"nodeType":"114","messageId":"115","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"140","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"120","line":4,"column":16,"nodeType":"114","messageId":"115","endLine":4,"endColumn":22},{"ruleId":"112","severity":1,"message":"141","line":9,"column":11,"nodeType":"114","messageId":"115","endLine":9,"endColumn":24},{"ruleId":"112","severity":1,"message":"142","line":3,"column":24,"nodeType":"114","messageId":"115","endLine":3,"endColumn":40},{"ruleId":"112","severity":1,"message":"143","line":1,"column":42,"nodeType":"114","messageId":"115","endLine":1,"endColumn":51},{"ruleId":"112","severity":1,"message":"120","line":2,"column":16,"nodeType":"114","messageId":"115","endLine":2,"endColumn":22},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'adminConfirmation' is assigned a value but never used.","'setAdminConfirmation' is assigned a value but never used.","'Row' is defined but never used.","'submitProfileChanges' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["146"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","React Hook useEffect has a missing dependency: 'BASE_URL'. Either include it or remove the dependency array.",["147"],["148"],"'Container' is defined but never used.","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","'search' is assigned a value but never used.","'useEffect' is defined but never used.","'authenticated' is assigned a value but never used.","'wrongCredentials' is assigned a value but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [setAuthenticated]",{"range":"155","text":"156"},"Update the dependencies array to be: [BASE_URL]",{"range":"157","text":"158"},"Update the dependencies array to be: [BASE_URL, category]",{"range":"159","text":"160"},[1308,1310],"[setAuthenticated]",[726,728],"[BASE_URL]",[963,973],"[BASE_URL, category]"]