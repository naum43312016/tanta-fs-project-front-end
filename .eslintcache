[{"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\index.js":"1","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\App.js":"3","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Contexts\\Authentication.js":"4","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\NavBars\\TopNavBar.jsx":"5","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Home.jsx":"6","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\LoginPage.jsx":"7","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\ProfileSettings.jsx":"8","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\SignUp.jsx":"9","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Filter.jsx":"10","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\ItemCard.jsx":"11","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\SearchBar.jsx":"12","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Login.jsx":"13","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\fetch.js":"14","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\WebsiteResponses.js":"15","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\MyItems.jsx":"16","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Logout.jsx":"17"},{"size":572,"mtime":1610733430304,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1610621832781,"results":"20","hashOfConfig":"19"},{"size":1357,"mtime":1610757275674,"results":"21","hashOfConfig":"19"},{"size":89,"mtime":1610753082839,"results":"22","hashOfConfig":"19"},{"size":2601,"mtime":1610757191606,"results":"23","hashOfConfig":"19"},{"size":347,"mtime":1610728451388,"results":"24","hashOfConfig":"19"},{"size":2878,"mtime":1610641987735,"results":"25","hashOfConfig":"19"},{"size":1265,"mtime":1610753002269,"results":"26","hashOfConfig":"19"},{"size":6448,"mtime":1610753002268,"results":"27","hashOfConfig":"19"},{"size":1305,"mtime":1610756927707,"results":"28","hashOfConfig":"19"},{"size":3535,"mtime":1610756035024,"results":"29","hashOfConfig":"19"},{"size":394,"mtime":1610756916039,"results":"30","hashOfConfig":"19"},{"size":2467,"mtime":1610753002267,"results":"31","hashOfConfig":"19"},{"size":3252,"mtime":1610753002270,"results":"32","hashOfConfig":"19"},{"size":2050,"mtime":1610754464442,"results":"33","hashOfConfig":"19"},{"size":855,"mtime":1610753002269,"results":"34","hashOfConfig":"19"},{"size":987,"mtime":1610753002267,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"173es2g",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\index.js",[],["78","79"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\App.js",["80","81","82","83"],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Contexts\\Authentication.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\NavBars\\TopNavBar.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Home.jsx",["84"],"import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport Filter from './Filter';\r\nimport ItemCard from './ItemCard';\r\nimport SearchBar from './SearchBar';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <SearchBar />\r\n            <Filter />\r\n            <ItemCard />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\LoginPage.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\ProfileSettings.jsx",["85"],"import { useState } from 'react'\r\nimport {Container, Form, Input, Button} from 'reactstrap'\r\nimport '../../styles/ProfileSettings.css'\r\nimport { submitProfileChanges } from '../../Tools/fetch';\r\n\r\nconst ProfileSettings = () => {\r\n    const [profileInfos, setProfileInfos] = useState(null)\r\n\r\n    const handleChange = (e) => {\r\n        setProfileInfos({\r\n            ...profileInfos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\r\n                <h3>Profile settings</h3>\r\n                <Input className=\"settings-input\" name=\"firstname\" placeholder=\"First Name\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" name=\"lastname\" placeholder=\"Last Name\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)}/>\r\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)}/>\r\n                <Button color=\"light\" > Save </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileSettings","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\SignUp.jsx",["86","87","88","89"],"import React, { useEffect } from \"react\";\r\nimport { Form, Container, Row, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { Signup } from '../../Tools/fetch';\r\nimport { Authentication } from '../../Contexts/Authentication';\r\nimport { invalidFields } from '../../Tools/WebsiteResponses';\r\n\r\nconst SignUp = (props) => {\r\n  const [userInfos, setUserInfos] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    userName: '',\r\n    address: '',\r\n    confirmPassword: '',\r\n  })\r\n  const { setAuthenticated } = useContext(Authentication);\r\n\r\n  const switchToLogin = () => {\r\n    props.setOpenSignup(false);\r\n    props.setOpenLogin(true);\r\n    setUserInfos(null)\r\n  };\r\n\r\n  const submitUser = () => {\r\n    if (userInfos.password === userInfos.confirmPassword) {\r\n    const userDetails = {...userInfos}\r\n    Signup(userDetails, setAuthenticated);\r\n    } else {\r\n      invalidFields(\"Passwords didn't match\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUserInfos({\r\n      ...userInfos,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    console.log(setAuthenticated)\r\n  }, [])\r\n\r\n  return (\r\n        <Container>\r\n              <Row className=\"d-flex justify-content-end\">\r\n                <Link to=\"/home\">\r\n                <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenSignup(false)}>\r\n                  X\r\n                </Button>\r\n                </Link>\r\n              </Row>\r\n              <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Create Account</ModalHeader>\r\n              <ModalBody>\r\n                <Form>\r\n                  <div className=\"d-flex flex-row\">\r\n                    <FormGroup>\r\n                      <Label for=\"firstName\">First Name <span style={{color: \"red\"}}>*</span></Label>\r\n                      <Input\r\n                      required\r\n                        onChange={(event) => handleChange(event)}\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        id=\"firstname\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"ml-3\" for=\"lastName\">\r\n                        Last Name <span style={{color: \"red\"}}>*</span>\r\n                      </Label>\r\n                      <Input\r\n                      required\r\n                        className=\"ml-3\"\r\n                        onChange={(event) => handleChange(event)}\r\n                        type=\"text\"\r\n                          name=\"lastName\"\r\n                          id=\"lastname\"\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <FormGroup>\r\n                    <Label for=\"email\">Email <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"example@something.com\"\r\n                      id=\"email\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"username\">Username <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      placeholder=\"Please choose a username\"\r\n                      id=\"username\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"address\">Address <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      placeholder=\"Enter your address\"\r\n                      id=\"address\"\r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  <FormGroup>\r\n                    <Label for=\"password\">Password <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"min 8 char, 1 special char, 1 capital letter\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"password-confirm\">Confirm Password <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"password\"\r\n                      name=\"confirmPassword\"\r\n                      id=\"confirmPassword\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"phone\">Phone Number <span style={{color: \"red\"}}>*</span></Label>\r\n                    <Input\r\n                    required\r\n                      onChange={(event) => handleChange(event)}\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      id=\"phoneNumber\"\r\n                    />\r\n                  </FormGroup>\r\n                </Form>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                  <Button color=\"primary\" disabled={(userInfos.firstName.length > 0 && userInfos.lastName.length > 0 && userInfos.email.length > 0 && userInfos.password.length > 0 && userInfos.confirmPassword.length > 0 && userInfos.phone.length > 0) ? false : true} onClick={submitUser} color=\"success\">\r\n                    Sign Up\r\n                  </Button>\r\n                  <Link to=\"/login\">\r\n                  <Button color=\"primary\" onClick={switchToLogin} color=\"success\">\r\n                    I Already Have An Account\r\n                  </Button>\r\n                  </Link>\r\n              </ModalFooter>\r\n            </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\Filter.jsx",["90","91","92","93","94","95","96","97"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Input, Row, Button, Dropdown, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\r\nconst Filter = () => {\r\n    const [categories, setCategories] = useState(null)\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/category/all')\r\n        .then(res => setCategories(res.data))\r\n        .catch(err => console.error(err))\r\n    }, [])\r\n\r\n    return (\r\n        <Row style={{height:\"100px\", paddingTop:\"40px\", marginBottom:\"115px\"}} className=\"align-items-center ml-4\">\r\n            <div className=\"offset-sm-1 col-sm-2 mr-sm-5 col-3\">\r\n                <label>Find by category</label>\r\n                <Input type=\"select\">\r\n                    <option value=\"\" selected>Choose here</option>\r\n                </Input>\r\n            </div>\r\n            <button className=\"filter-btn col-2\">Furniture</button>\r\n            <button className=\"filter-btn col-2\">Kitchen</button>\r\n            <button className=\"filter-btn col-2\">Garden</button>\r\n            <button className=\"filter-btn col-2\">Electronics</button>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Filter;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\ItemCard.jsx",["98","99","100"],"import React from 'react';\r\nimport { Container, Row, Card, CardBody, CardTitle, CardSubtitle, CardText, CardImg, Button } from 'reactstrap';\r\nimport Pic from \"./971c17c93f74bc7280e285153b2e1ace-700.jpg\";\r\n\r\nconst ItemCard = () => {\r\n    return (\r\n        <div style={{width:\"80%\", marginLeft:\"10%\"}} className=\"card-container mt-5 mb-5\">\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" src={Pic} alt=\"Card image cap\" />\r\n                    <CardBody className=\"overflow-dots\">\r\n                        <CardTitle tag=\"h5\">Item</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Location</CardSubtitle>\r\n                        <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCard;","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\HomePage\\SearchBar.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Login.jsx",["101","102","103"],"import React, { useEffect } from \"react\";\r\nimport { Container, Form, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter, Row } from \"reactstrap\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { SignIn } from '../../Tools/fetch';\r\nimport { Authentication } from '../../Contexts/Authentication';\r\n\r\nconst Login = (props) => {\r\n  const { authenticated, setAuthenticated }  = useContext(Authentication);\r\n  const [userInfos, setUserInfos] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const switchToSignUp = () => {\r\n    props.setOpenLogin(false);\r\n    props.setOpenSignup(true);\r\n    setUserInfos({\r\n      ...userInfos,\r\n      email: '',\r\n      password: '',\r\n    })\r\n    };\r\n  \r\n  const handleChange = (event) => {\r\n    setUserInfos({\r\n      ...userInfos,\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  const LoginUser = () => {\r\n    const userDetails = { ...userInfos, role: \"USER_STATUS\" }\r\n    SignIn(userDetails, setAuthenticated)\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"d-flex justify-content-end\">\r\n        <Link to=\"/home\">\r\n          <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenLogin(false)}>\r\n            X\r\n        </Button>\r\n        </Link>\r\n      </Row>\r\n    <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Login</ModalHeader>\r\n      <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"exampleEmail\">Email</Label>\r\n            <Input\r\n              onChange={(event) => handleChange(event)}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"exampleEmail\"\r\n              placeholder=\"example@something.com\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              onChange={(event) => handleChange(event)}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"examplePassword\"\r\n            />\r\n          </FormGroup>\r\n        </Form>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={LoginUser} color=\"success\">\r\n          Login\r\n          </Button>\r\n        <Link to=\"/signup\">\r\n          <Button onClick={switchToSignUp} color=\"success\">\r\n            I Don't Have An Account Yet\r\n          </Button>\r\n        </Link>\r\n      </ModalFooter>\r\n\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\fetch.js",["104"],"const axios = require('axios');\r\n\r\nconst { invalidFields, wrongCredentials, signUpSucces, signInSuccess, updatedProfile } = require('./WebsiteResponses');\r\n\r\nconst base_URL = \"http://localhost:3001\";\r\n\r\nconst validateEmail = (email) => {\r\n  const re = /\\S+@\\S+\\.\\S+/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst validatePassword = (password) => {\r\n  const re = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\r\n  return re.test(password);\r\n}\r\n\r\nconst checkFields = (userDetails) => {\r\n  const { firstName, lastName, email, password, phone } = userDetails;\r\n  if (firstName.length <= 2 || lastName.length <= 2) {\r\n    return invalidFields('First and last name should contain at least 2 characters');\r\n  }\r\n  if (!validateEmail(email)) {\r\n    return invalidFields(\"Please use a valid email address\");\r\n  }\r\n  if (!validatePassword(password)) {\r\n    return invalidFields(\"Your password must have a minimum of 8 characters including at least one number\")\r\n  }\r\n  if (phone.length < 10) {\r\n    return invalidFields(\"Please enter a valid phone number\")\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nconst Signup = (userDetails, setAuthenticated) => {\r\n  if (checkFields(userDetails) === true) {\r\n    return axios.post(`${base_URL}/signup`, userDetails)\r\n      .then(\r\n        (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signUpSucces(), localStorage.setItem('firstName', res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\r\n                  setAuthenticated(true)) : null\r\n      )\r\n      .catch(err => console.error(err))\r\n  }\r\n};\r\n\r\nconst SignIn = (userDetails, setAuthenticated) => {\r\n  return axios.post(`${base_URL}/login`, userDetails)\r\n    .then(\r\n      (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signInSuccess(), localStorage.setItem(\"firstName\", res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\r\n      setAuthenticated(true)) : null\r\n    )\r\n    .catch((err) => console.error(err));\r\n};\r\n\r\n\r\nconst getCookies = (setAuthenticated) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = { headers: { Authorization: \"Bearer \" + token } }\r\n  return axios.get(base_URL + \"/\", config)\r\n    .then(res =>\r\n      res.status === 200\r\n        ? (setAuthenticated(true))\r\n        : console.log(\"Couldn't authenticate\")\r\n    )\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst checkForAdmin = (setState, bool, bool2) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const config = { headers: { Authorization: \"Bearer \" + token } }\r\n  axios.get(base_URL +  '/upload', config)\r\n    .then(res => setState(bool))\r\n    .catch(err => setState(bool2))\r\n}\r\n\r\nconst submitProfileChanges = (details, userDocument) => {\r\n  if (checkFields(details) === true) {\r\n    console.log('ho')\r\n    axios.put(base_URL + `/profile/${userDocument._id}`, {\r\n      details\r\n    })\r\n      .then(res => updatedProfile(\"Profile updated\", \"success\"))\r\n      .catch(err => updatedProfile(\"There was an issue updating your profile\", \"error\"));\r\n  }\r\n}\r\n\r\nexport {  Signup, \r\n          SignIn, \r\n          getCookies, \r\n          validateEmail, \r\n          validatePassword, \r\n          checkForAdmin, \r\n          submitProfileChanges,\r\n        }\r\n","C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Tools\\WebsiteResponses.js",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\Profile\\MyItems.jsx",[],"C:\\Users\\joey-\\OneDrive\\Desktop\\Full Stack Project\\tanta-fs-project-front-end\\src\\Components\\LoginPage\\Logout.jsx",["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":21,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"115","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":17},{"ruleId":"111","severity":1,"message":"116","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":27},{"ruleId":"111","severity":1,"message":"117","line":14,"column":29,"nodeType":"113","messageId":"114","endLine":14,"endColumn":49},{"ruleId":"111","severity":1,"message":"118","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"111","severity":1,"message":"119","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":30},{"ruleId":"111","severity":1,"message":"120","line":4,"column":16,"nodeType":"113","messageId":"114","endLine":4,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":46,"column":6,"nodeType":"123","endLine":46,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":153,"column":289,"nodeType":"127","endLine":153,"endColumn":304},{"ruleId":"125","severity":1,"message":"126","line":157,"column":67,"nodeType":"127","endLine":157,"endColumn":82},{"ruleId":"111","severity":1,"message":"128","line":3,"column":22,"nodeType":"113","messageId":"114","endLine":3,"endColumn":28},{"ruleId":"111","severity":1,"message":"129","line":3,"column":30,"nodeType":"113","messageId":"114","endLine":3,"endColumn":38},{"ruleId":"111","severity":1,"message":"130","line":3,"column":40,"nodeType":"113","messageId":"114","endLine":3,"endColumn":54},{"ruleId":"111","severity":1,"message":"131","line":3,"column":56,"nodeType":"113","messageId":"114","endLine":3,"endColumn":68},{"ruleId":"111","severity":1,"message":"132","line":3,"column":70,"nodeType":"113","messageId":"114","endLine":3,"endColumn":82},{"ruleId":"111","severity":1,"message":"133","line":5,"column":12,"nodeType":"113","messageId":"114","endLine":5,"endColumn":22},{"ruleId":"111","severity":1,"message":"134","line":6,"column":12,"nodeType":"113","messageId":"114","endLine":6,"endColumn":24},{"ruleId":"111","severity":1,"message":"135","line":8,"column":11,"nodeType":"113","messageId":"114","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"136","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"118","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"128","line":2,"column":86,"nodeType":"113","messageId":"114","endLine":2,"endColumn":92},{"ruleId":"111","severity":1,"message":"137","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"120","line":4,"column":16,"nodeType":"113","messageId":"114","endLine":4,"endColumn":22},{"ruleId":"111","severity":1,"message":"138","line":9,"column":11,"nodeType":"113","messageId":"114","endLine":9,"endColumn":24},{"ruleId":"111","severity":1,"message":"139","line":3,"column":24,"nodeType":"113","messageId":"114","endLine":3,"endColumn":40},{"ruleId":"111","severity":1,"message":"140","line":1,"column":42,"nodeType":"113","messageId":"114","endLine":1,"endColumn":51},{"ruleId":"111","severity":1,"message":"120","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":22},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'LoginPage' is defined but never used.","'adminConfirmation' is assigned a value but never used.","'setAdminConfirmation' is assigned a value but never used.","'Row' is defined but never used.","'submitProfileChanges' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["143"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'categories' is assigned a value but never used.","'dropdownOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'authenticated' is assigned a value but never used.","'wrongCredentials' is assigned a value but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [setAuthenticated]",{"range":"146","text":"147"},[1308,1310],"[setAuthenticated]"]