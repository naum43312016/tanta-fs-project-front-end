[{"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js":"1","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js":"2","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js":"3","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js":"4","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx":"5","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx":"6","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx":"7","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx":"8","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js":"9","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js":"10","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx":"11","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx":"12","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/SearchBar.jsx":"13","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx":"14","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx":"15","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx":"16"},{"size":554,"mtime":1610837572234,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610736072307,"results":"19","hashOfConfig":"18"},{"size":1410,"mtime":1610838576711,"results":"20","hashOfConfig":"18"},{"size":86,"mtime":1610752200374,"results":"21","hashOfConfig":"18"},{"size":1418,"mtime":1610877286082,"results":"22","hashOfConfig":"18"},{"size":2744,"mtime":1610837786990,"results":"23","hashOfConfig":"18"},{"size":1255,"mtime":1610877704340,"results":"24","hashOfConfig":"18"},{"size":1292,"mtime":1610873179833,"results":"25","hashOfConfig":"18"},{"size":1951,"mtime":1610789401093,"results":"26","hashOfConfig":"18"},{"size":3158,"mtime":1610753299989,"results":"27","hashOfConfig":"18"},{"size":6283,"mtime":1610753299988,"results":"28","hashOfConfig":"18"},{"size":2381,"mtime":1610753299988,"results":"29","hashOfConfig":"18"},{"size":424,"mtime":1610837506651,"results":"30","hashOfConfig":"18"},{"size":1480,"mtime":1610874913749,"results":"31","hashOfConfig":"18"},{"size":1740,"mtime":1610837506650,"results":"32","hashOfConfig":"18"},{"size":2877,"mtime":1610879376064,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"137pv15",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js",[],["77","78"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js",["79","80","81"],"import React, { useState, useEffect } from 'react';\nimport { Authentication } from './Contexts/Authentication';\nimport { Container, Navbar } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './styles/App.css';\nimport Home from './Components/HomePage/Home';\nimport ProfileSettings from './Components/Profile/ProfileSettings';\nimport TopNavBar from './Components/NavBars/TopNavBar';\nimport MyItems from './Components/Profile/MyItems'\nimport AddItem from './Components/ItemPage/AddItem'\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false); // true just for now\n  const [adminConfirmation, setAdminConfirmation] = useState(false);\n  const token = localStorage.getItem('token') || null\n\n  useEffect(() => {\n    if(token) {\n      setAuthenticated(true)\n    }\n  }, [token])\n\n  return (\n    <Container fluid>\n      <Authentication.Provider value={{ authenticated, setAuthenticated }}>\n        <Router>\n          <TopNavBar />\n          <Switch>\n              <Route path=\"/add-item\" component={AddItem}/>\n              <Route path=\"/my-items\" component={MyItems}/>\n              <Route path=\"/settings\" component={ProfileSettings} />\n              <Route path=\"/item\" />\n              <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </Authentication.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx",["82"],"import { useState } from 'react'\nimport {Container,Form, Input, Button} from 'reactstrap'\nimport '../../styles/ProfileSettings.css'\nimport { submitProfileChanges } from '../../Tools/fetch';\n\nconst ProfileSettings = () => {\n    const [profileInfos, setProfileInfos] = useState(null)\n\n    const handleChange = (e) => {\n        setProfileInfos({\n            ...profileInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n\n\n    return (\n        <Container>\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\n                <h3>Profile settings</h3>\n                <div className=\"user-coins\"> </div>\n                <Input className=\"settings-input\" name=\"firstname\" placeholder=\"First Name\" onChange={e => handleChange(e)}/>\n                <Input className=\"settings-input\" name=\"lastname\" placeholder=\"Last Name\" onChange={e => handleChange(e)}/>\n                <Input className=\"settings-input\" type=\"text\" name=\"address\" placeholder=\"Address\" onChange={e => handleChange(e)}/>\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)}/>\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)}/>\n                <Button color=\"light\" > Save </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default ProfileSettings","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx",["83","84","85","86"],"import { Button } from \"reactstrap\"\nimport ItemCard from \"../HomePage/ItemCards\"\nimport '../../styles/MyItems.css'\nimport { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport dotenv from 'dotenv'\n\nconst MyItems = (props) => {\n    const [filter, setFilter] = useState(\"All\")\n    const [cards, setCards] = useState(null) //Getting user's cards\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n    const userID = localStorage.getItem('sessionID')\n    useEffect(()=>{\n        axios.get(`${BASE_URL}/user/${userID}`)\n        .then(res => setCards(res.data.items))\n    }, [])\n    return (\n        <div className=\"my-items-container mt-2\">\n            <div className=\"items-filter\">\n                <Button color=\"light\" onClick={(e) => setFilter(\"All\")}> All </Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Offered\")}> Selling </Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Saved\")}> Saved </Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Sold\")}> Sold </Button>\n            </div>\n            {filter && <h3 className=\"mt-2\">{filter}</h3>}\n            {/* {cards && <ItemCard cards={cards} items={filter}/>} */}\n        </div>\n    )\n}\n\nexport default MyItems","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx",["87","88","89"],"import React, { useEffect, useState } from 'react';\nimport Filter from './Filter';\nimport ItemCard from './ItemCards';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    const [search, setSearch] = useState('');\n    const [category, setCategory] = useState('')\n    const [cards, setCards] = useState([]);\n    const [currentCard, setCurrentCard] = useState(null);\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n    useEffect(() => { //getting all items on first app render\n        axios.get('http://localhost:3001/home/get-all-items')\n            .then(res => setCards(res.data))\n            .catch(err => 'There was an issue fetching all the items');\n    }, [])\n\n    useEffect(() => { //fetching categories\n        axios.get(BASE_URL + `/category?name=${category}`)\n            .then(res => console.log(res))\n            .catch(err => console.log('There was an issue fetching the items of the requested category'));\n    }, [category])\n\n    return (\n        <div>\n            <SearchBar search={search} setSearch={setSearch} />\n            <Filter category={category} setCategory={setCategory} />\n            <ItemCard cards={cards} currentCard={currentCard} />\n        </div>\n    )\n}\n\nexport default Home;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js",["90"],"const axios = require('axios');\n\nconst { invalidFields, wrongCredentials, signUpSucces, signInSuccess, updatedProfile } = require('./WebsiteResponses');\n\nconst base_URL = \"http://localhost:3001\";\n\nconst validateEmail = (email) => {\n  const re = /\\S+@\\S+\\.\\S+/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst validatePassword = (password) => {\n  const re = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\n  return re.test(password);\n}\n\nconst checkFields = (userDetails) => {\n  const { firstName, lastName, email, password, phone } = userDetails;\n  if (firstName.length <= 2 || lastName.length <= 2) {\n    return invalidFields('First and last name should contain at least 2 characters');\n  }\n  if (!validateEmail(email)) {\n    return invalidFields(\"Please use a valid email address\");\n  }\n  if (!validatePassword(password)) {\n    return invalidFields(\"Your password must have a minimum of 8 characters including at least one number\")\n  }\n  if (phone.length < 10) {\n    return invalidFields(\"Please enter a valid phone number\")\n  }\n  return true;\n}\n\n\nconst Signup = (userDetails, setAuthenticated) => {\n  if (checkFields(userDetails) === true) {\n    return axios.post(`${base_URL}/signup`, userDetails)\n      .then(\n        (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signUpSucces(), localStorage.setItem('firstName', res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\n                  setAuthenticated(true)) : null\n      )\n      .catch(err => console.error(err))\n  }\n};\n\nconst SignIn = (userDetails, setAuthenticated) => {\n  return axios.post(`${base_URL}/login`, userDetails)\n    .then(\n      (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signInSuccess(), localStorage.setItem(\"firstName\", res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\n      setAuthenticated(true)) : null\n    )\n    .catch((err) => console.error(err));\n};\n\n\nconst getCookies = (setAuthenticated) => {\n  const token = localStorage.getItem(\"token\");\n  const config = { headers: { Authorization: \"Bearer \" + token } }\n  return axios.get(base_URL + \"/\", config)\n    .then(res =>\n      res.status === 200\n        ? (setAuthenticated(true))\n        : console.log(\"Couldn't authenticate\")\n    )\n    .catch((err) => console.log(err));\n};\n\nconst checkForAdmin = (setState, bool, bool2) => {\n  const token = localStorage.getItem(\"token\");\n  const config = { headers: { Authorization: \"Bearer \" + token } }\n  axios.get(base_URL +  '/upload', config)\n    .then(res => setState(bool))\n    .catch(err => setState(bool2))\n}\n\nconst submitProfileChanges = (details, userDocument) => {\n  if (checkFields(details) === true) {\n    console.log('ho')\n    axios.put(base_URL + `/profile/${userDocument._id}`, {\n      details\n    })\n      .then(res => updatedProfile(\"Profile updated\", \"success\"))\n      .catch(err => updatedProfile(\"There was an issue updating your profile\", \"error\"));\n  }\n}\n\nexport {  Signup, \n          SignIn, \n          getCookies, \n          validateEmail, \n          validatePassword, \n          checkForAdmin, \n          submitProfileChanges,\n        }\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx",["91","92","93","94"],"import React, { useEffect } from \"react\";\nimport { Form, Container, Row, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useContext, useState } from \"react\";\nimport { Link, Router } from \"react-router-dom\";\nimport { Signup } from '../../Tools/fetch';\nimport { Authentication } from '../../Contexts/Authentication';\nimport { invalidFields } from '../../Tools/WebsiteResponses';\n\nconst SignUp = (props) => {\n  const [userInfos, setUserInfos] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    userName: '',\n    address: '',\n    confirmPassword: '',\n  })\n  const { setAuthenticated } = useContext(Authentication);\n\n  const switchToLogin = () => {\n    props.setOpenSignup(false);\n    props.setOpenLogin(true);\n    setUserInfos(null)\n  };\n\n  const submitUser = () => {\n    if (userInfos.password === userInfos.confirmPassword) {\n    const userDetails = {...userInfos}\n    Signup(userDetails, setAuthenticated);\n    } else {\n      invalidFields(\"Passwords didn't match\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setUserInfos({\n      ...userInfos,\n      [e.target.name] : e.target.value\n    })\n  }\n  \n  useEffect(() => {\n    console.log(setAuthenticated)\n  }, [])\n\n  return (\n        <Container>\n              <Row className=\"d-flex justify-content-end\">\n                <Link to=\"/home\">\n                <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenSignup(false)}>\n                  X\n                </Button>\n                </Link>\n              </Row>\n              <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Create Account</ModalHeader>\n              <ModalBody>\n                <Form>\n                  <div className=\"d-flex flex-row\">\n                    <FormGroup>\n                      <Label for=\"firstName\">First Name <span style={{color: \"red\"}}>*</span></Label>\n                      <Input\n                      required\n                        onChange={(event) => handleChange(event)}\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstname\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label className=\"ml-3\" for=\"lastName\">\n                        Last Name <span style={{color: \"red\"}}>*</span>\n                      </Label>\n                      <Input\n                      required\n                        className=\"ml-3\"\n                        onChange={(event) => handleChange(event)}\n                        type=\"text\"\n                          name=\"lastName\"\n                          id=\"lastname\"\n                      />\n                    </FormGroup>\n                  </div>\n                  <FormGroup>\n                    <Label for=\"email\">Email <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"example@something.com\"\n                      id=\"email\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"username\">Username <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"text\"\n                      name=\"userName\"\n                      placeholder=\"Please choose a username\"\n                      id=\"username\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"address\">Address <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"text\"\n                      name=\"address\"\n                      placeholder=\"Enter your address\"\n                      id=\"address\"\n                    />\n                  </FormGroup>\n                  \n                  <FormGroup>\n                    <Label for=\"password\">Password <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"min 8 char, 1 special char, 1 capital letter\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password-confirm\">Confirm Password <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      id=\"confirmPassword\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"phone\">Phone Number <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"tel\"\n                      name=\"phone\"\n                      id=\"phoneNumber\"\n                    />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <ModalFooter>\n                  <Button color=\"primary\" disabled={(userInfos.firstName.length > 0 && userInfos.lastName.length > 0 && userInfos.email.length > 0 && userInfos.password.length > 0 && userInfos.confirmPassword.length > 0 && userInfos.phone.length > 0) ? false : true} onClick={submitUser} color=\"success\">\n                    Sign Up\n                  </Button>\n                  <Link to=\"/login\">\n                  <Button color=\"primary\" onClick={switchToLogin} color=\"success\">\n                    I Already Have An Account\n                  </Button>\n                  </Link>\n              </ModalFooter>\n            </Container>\n  );\n};\n\nexport default SignUp;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx",["95","96","97"],"import React, { useEffect } from \"react\";\nimport { Container, Form, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter, Row } from \"reactstrap\";\nimport { useContext, useState } from \"react\";\nimport { Link, Router } from \"react-router-dom\";\nimport { SignIn } from '../../Tools/fetch';\nimport { Authentication } from '../../Contexts/Authentication';\n\nconst Login = (props) => {\n  const { authenticated, setAuthenticated }  = useContext(Authentication);\n  const [userInfos, setUserInfos] = useState({\n    email: '',\n    password: '',\n  })\n\n  const switchToSignUp = () => {\n    props.setOpenLogin(false);\n    props.setOpenSignup(true);\n    setUserInfos({\n      ...userInfos,\n      email: '',\n      password: '',\n    })\n    };\n  \n  const handleChange = (event) => {\n    setUserInfos({\n      ...userInfos,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const LoginUser = () => {\n    const userDetails = { ...userInfos, role: \"USER_STATUS\" }\n    SignIn(userDetails, setAuthenticated)\n  };\n\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-end\">\n        <Link to=\"/home\">\n          <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenLogin(false)}>\n            X\n        </Button>\n        </Link>\n      </Row>\n    <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Login</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              onChange={(event) => handleChange(event)}\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"example@something.com\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              onChange={(event) => handleChange(event)}\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={LoginUser} color=\"success\">\n          Login\n          </Button>\n        <Link to=\"/signup\">\n          <Button onClick={switchToSignUp} color=\"success\">\n            I Don't Have An Account Yet\n          </Button>\n        </Link>\n      </ModalFooter>\n\n\n    </Container>\n  );\n};\n\nexport default Login;\n",["98","99"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/SearchBar.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx",["100","101","102","103","104","105"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Card, CardBody, CardTitle, CardSubtitle, CardText, CardImg, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Pic from \"./971c17c93f74bc7280e285153b2e1ace-700.jpg\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\n\nconst ItemCard = (props) => {\n    return (\n        <div style={{ width: \"80%\", marginLeft: \"10%\" }} className=\"card-container mt-5 mb-5\">\n            {props.cards.map((item) => {\n                return (<Card>\n                    <Link to={`/item/${item._id}`}  >\n                        <CardImg style={{maxHeight:\"200px\"}} top width=\"100%\" src={item.imageUrl} alt=\"Card image cap\" />\n                    </Link>\n                    <CardBody className=\"overflow-dots\">\n                        <Row  >\n                            <CardTitle tag=\"h5\" className=\"col-10\">{item.name}</CardTitle>\n                            <p>{item.price} <FontAwesomeIcon style={{color:\"orange\", fontSize:\"20px\"}} icon={faCoins} /></p>\n                        </Row>\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{item.condition}</CardSubtitle>\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ItemCard;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx",["106","107","108"],"import { faCamera} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport {Container,Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport '../../styles/AddItem.css'\nimport dotenv from 'dotenv'\n\nconst AddItem = () => {\n    const [profileInfos, setProfileInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [categories, setCategories] = useState({categories: null, selected: null})\n    const [pic, setPic] = useState({selectedFile: null})\n\n    const baseURL = process.env.REACT_APP_BASE_URL\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setProfileInfos({\n            ...profileInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n    const imageUploadStyle = {\n        color: \"#5BA9E6\", \n        fontSize: \"35px\",\n    }\n    const handleSelect = (e) => {\n        setCategories({...categories, selected: e.target.value})\n    }\n    useEffect(() => {\n        axios.get(`${baseURL}/category/all`)\n        .then(res => setCategories({...categories, category: res.data}))\n        .catch(err => console.error(err))\n    }, [categories])\n    return (\n        <Container>\n        <Form action=\"\" className=\"add-item-form\" onSubmit={e=> e.preventDefault()}>\n            <input type=\"file\" ref={ref} id=\"hidden\" onChange={(e) => {                  \n                setPic({selectedFile :e.target.files[0]})\n                } }/>\n            <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera}/></div>\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret color=\"light\">\n                    Category\n                </DropdownToggle>\n                <DropdownMenu>\n                    {categories.categories && categories.categories.map(category => (\n                        <DropdownItem onClick={(e) => handleSelect(e)}> {category.name} </DropdownItem>\n                    ))}\n                </DropdownMenu>\n        </Dropdown>\n            <Input className=\"add-item-input\" name=\"firstname\" placeholder=\"First Name\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"lastname\" placeholder=\"Last Name\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)}/>\n            <Button color=\"light\" > Add an item </Button>\n        </Form>\n    </Container>\n    )\n}\n\nexport default AddItem",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":21,"nodeType":"115","messageId":"116","endLine":3,"endColumn":27},{"ruleId":"113","severity":1,"message":"117","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":27},{"ruleId":"113","severity":1,"message":"118","line":14,"column":29,"nodeType":"115","messageId":"116","endLine":14,"endColumn":49},{"ruleId":"113","severity":1,"message":"119","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":30},{"ruleId":"113","severity":1,"message":"120","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"121","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"122","line":10,"column":12,"nodeType":"115","messageId":"116","endLine":10,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":16,"column":8,"nodeType":"125","endLine":16,"endColumn":10,"suggestions":"126"},{"ruleId":"113","severity":1,"message":"127","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"128","line":12,"column":25,"nodeType":"115","messageId":"116","endLine":12,"endColumn":39},{"ruleId":"123","severity":1,"message":"129","line":25,"column":8,"nodeType":"125","endLine":25,"endColumn":18,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"131","line":3,"column":24,"nodeType":"115","messageId":"116","endLine":3,"endColumn":40},{"ruleId":"113","severity":1,"message":"132","line":4,"column":16,"nodeType":"115","messageId":"116","endLine":4,"endColumn":22},{"ruleId":"123","severity":1,"message":"133","line":46,"column":6,"nodeType":"125","endLine":46,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":153,"column":289,"nodeType":"137","endLine":153,"endColumn":304},{"ruleId":"135","severity":1,"message":"136","line":157,"column":67,"nodeType":"137","endLine":157,"endColumn":82},{"ruleId":"113","severity":1,"message":"138","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"132","line":4,"column":16,"nodeType":"115","messageId":"116","endLine":4,"endColumn":22},{"ruleId":"113","severity":1,"message":"139","line":9,"column":11,"nodeType":"115","messageId":"116","endLine":9,"endColumn":24},{"ruleId":"109","replacedBy":"140"},{"ruleId":"111","replacedBy":"141"},{"ruleId":"113","severity":1,"message":"138","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"142","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"143","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"144","line":2,"column":86,"nodeType":"115","messageId":"116","endLine":2,"endColumn":92},{"ruleId":"113","severity":1,"message":"145","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":11},{"ruleId":"113","severity":1,"message":"146","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"121","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":14},{"ruleId":"113","severity":1,"message":"147","line":13,"column":12,"nodeType":"115","messageId":"116","endLine":13,"endColumn":15},{"ruleId":"123","severity":1,"message":"148","line":37,"column":8,"nodeType":"125","endLine":37,"endColumn":20,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'adminConfirmation' is assigned a value but never used.","'setAdminConfirmation' is assigned a value but never used.","'submitProfileChanges' is defined but never used.","'ItemCard' is defined but never used.","'dotenv' is defined but never used.","'cards' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'BASE_URL' and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["152"],"'Link' is defined but never used.","'setCurrentCard' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'BASE_URL'. Either include it or remove the dependency array.",["153"],"'wrongCredentials' is assigned a value but never used.","'Router' is defined but never used.","React Hook useEffect has a missing dependency: 'setAuthenticated'. Either include it or remove the dependency array.",["154"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'authenticated' is assigned a value but never used.",["150"],["151"],"'useState' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Pic' is defined but never used.","'axios' is defined but never used.","'pic' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [BASE_URL, userID]",{"range":"164","text":"165"},"Update the dependencies array to be: [BASE_URL, category]",{"range":"166","text":"167"},"Update the dependencies array to be: [setAuthenticated]",{"range":"168","text":"169"},"Update the dependencies array to be: [baseURL, categories]",{"range":"170","text":"171"},[587,589],"[BASE_URL, userID]",[1010,1020],"[BASE_URL, category]",[1263,1265],"[setAuthenticated]",[1354,1366],"[baseURL, categories]"]