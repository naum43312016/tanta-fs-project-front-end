[{"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js":"1","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js":"2","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js":"3","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js":"4","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx":"5","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx":"6","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx":"7","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx":"8","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx":"9","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx":"10","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/URLs.js":"11","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js":"12","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx":"13","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx":"14","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx":"15","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx":"16","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx":"17","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js":"18","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/UserCoins.js":"19"},{"size":554,"mtime":1610909759769,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610736072307,"results":"22","hashOfConfig":"21"},{"size":2119,"mtime":1611486529847,"results":"23","hashOfConfig":"21"},{"size":85,"mtime":1611003624734,"results":"24","hashOfConfig":"21"},{"size":2209,"mtime":1611412141122,"results":"25","hashOfConfig":"21"},{"size":2411,"mtime":1611486310428,"results":"26","hashOfConfig":"21"},{"size":721,"mtime":1611486561332,"results":"27","hashOfConfig":"21"},{"size":2872,"mtime":1611429539159,"results":"28","hashOfConfig":"21"},{"size":3540,"mtime":1611484359591,"results":"29","hashOfConfig":"21"},{"size":5039,"mtime":1611416398551,"results":"30","hashOfConfig":"21"},{"size":241,"mtime":1611416398554,"results":"31","hashOfConfig":"21"},{"size":2576,"mtime":1611413425822,"results":"32","hashOfConfig":"21"},{"size":4838,"mtime":1611486763358,"results":"33","hashOfConfig":"21"},{"size":2380,"mtime":1610964774622,"results":"34","hashOfConfig":"21"},{"size":2343,"mtime":1611416398551,"results":"35","hashOfConfig":"21"},{"size":6164,"mtime":1611416398551,"results":"36","hashOfConfig":"21"},{"size":1941,"mtime":1611486779949,"results":"37","hashOfConfig":"21"},{"size":3029,"mtime":1611416398554,"results":"38","hashOfConfig":"21"},{"size":75,"mtime":1611442212153,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"137pv15",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js",[],["82","83"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js",["84"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx",["85"],"import { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react'\nimport {Container,Form, Input, Button} from 'reactstrap'\nimport '../../Styles/ProfileSettings.css'\nimport BASE_URL from '../../Tools/URLs';\n\nconst ProfileSettings = () => {\n    const [profileInfos, setProfileInfos] = useState(null)\n    const userID = localStorage.getItem('sessionID')\n\n    const handleChange = (e) => {\n        setProfileInfos({\n            ...profileInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/user/${userID}`)\n        .then(res => setProfileInfos(res.data))\n    }, [])\n\n    return (\n        <Container>\n            <div className=\"coins-div\">\n                <div><FontAwesomeIcon icon={faCoins} size=\"3x\" color=\"#FFD700\"/> </div>\n                <div className=\"coin-number\"> {profileInfos && profileInfos.coins} </div>\n            </div>\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\n                <h3>Profile settings</h3>\n                <div className=\"user-coins\"> </div>\n                <Input className=\"settings-input\" name=\"firstName\" placeholder=\"First Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.firstName}/>\n                <Input className=\"settings-input\" name=\"lastName\" placeholder=\"Last Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.lastName}/>\n                <Input className=\"settings-input\" type=\"text\" name=\"address\" placeholder=\"Address\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.address}/>\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.phone}/>\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.email}/>\n                <Button color=\"light\" > Save </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default ProfileSettings","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx",["86","87","88","89"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx",["90","91","92","93","94"],"import { Button } from \"reactstrap\"\nimport ItemCards from \"../HomePage/ItemCards\"\nimport '../../Styles/MyItems.css'\nimport { useState, useEffect } from \"react\"\nimport axios from 'axios';\nimport BASE_URL from '../../Tools/URLs';\n\nconst MyItems = () => {\n    const [filter, setFilter] = useState(\"Offered\")\n    const [sellingItems, setSellingItems] = useState([]);\n    const [purchasedItems, setPurchasedItems] = useState([]);\n    const [favoriteItems, setFavoriteItems] = useState([]);\n    const [soldItems, setSoldItems] = useState([]);\n    \n    useEffect(() => { // get offered item app rendering\n        axios.get(`${BASE_URL}/home/get-all-items`)\n        .then(res => res.data)\n        .then(res => {\n            const sellingCards = []\n            res.forEach(item => {\n                if(item.sellerId == localStorage.getItem('sessionID')) {\n                    sellingCards.push(item) \n                }\n            })\n            setSellingItems(sellingCards)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    useEffect(() => {  // fetch all categories\n        const getItems = () => {\n            axios.get(`${BASE_URL}/user/${localStorage.getItem('sessionID')}`)\n            .then(res => res.data)\n            .then(res => {\n                const purchasedCards = []\n                const favoriteCards = []\n                res.purchasedItems.forEach(item => {\n                    axios.get(`${BASE_URL}/item/${item}`)\n                    .then(res => res.data)\n                    .then(res => purchasedCards.push(res))\n                })\n                res.favoriteItems.forEach(item => {\n                    axios.get(`${BASE_URL}/item/${item}`)\n                    .then(res => res.data)\n                    .then(res => favoriteCards.push(res))\n                })\n                setPurchasedItems(purchasedCards)\n                setFavoriteItems(favoriteCards)\n            })\n            .catch(err => console.error(err))\n        }\n        getItems()\n    }, [])\n\n    const adaptiveCards = () => { // get cards depending on category\n        if(filter == \"Saved\") return favoriteItems\n        else if (filter == \"Purchased\") return purchasedItems\n        return sellingItems\n    }\n\n    return (\n        <div className=\"my-items-container mt-2\">\n            <div> </div>\n            <div className=\"items-filter\">\n                <Button color=\"light\" onClick={(e) => setFilter(\"Offered\")}>Offered</Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Saved\")}>Saved</Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Purchased\")}>Purchased</Button>\n                <Button color=\"light\" onClick={(e) => setFilter(\"Sold\")}>Sold</Button>\n            </div>\n            <h3 className=\"mt-2\">{filter}</h3>\n            <ItemCards cards={adaptiveCards()} />\n        </div>\n    )\n}\n\nexport default MyItems","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx",["95","96","97","98"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx",["99"],"import { faCamera} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport {Container,Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport '../../Styles/AddItem.css'\nimport { invalidFields } from '../../Tools/WebsiteResponses';\nimport { itemUploaded } from '../../Tools/WebsiteResponses';\nimport {Redirect} from 'react-router'\nimport BASE_URL from '../../Tools/URLs';\n\nconst AddItem = () => {\n    const [itemInfos, setItemInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [categories, setCategories] = useState({categories: null, selected: null})\n    const [pic, setPic] = useState({selectedFile: null})\n    const [previewPic, setPreviewPic] = useState(\"\")\n    const [redirect, setRedirect] = useState(false) // in case of success\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setItemInfos({\n            ...itemInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n    const imageUploadStyle = {\n        color: \"#4a81ff\", \n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setCategories({...categories, selected: e.target.value})\n        setItemInfos({...itemInfos, category: e.target.value})\n    }\n\n    const postItem = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for(let key in itemInfos) {\n            data.append(key, itemInfos[key])\n        }\n        if(pic.selectedFile) {\n            data.append('image', pic.selectedFile, `${Date.now()}-${pic.selectedFile.name}`)\n        }\n        axios.post(`${BASE_URL}/item`, data, {headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}})\n            .then(itemUploaded())\n            .then(setRedirect(true)) // if success so set success & redirect to homepage\n            .catch(err => {\n                // fetch error message from server\n                const error = err.response.data \n                const errorMessages = error.message || error.category || error.name || error.condition || error.description || error.price \n                invalidFields(errorMessages) // else show error message\n            })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/category/all`)\n        .then(res => setCategories({...categories, categories: res.data}))\n        .catch(err => console.error(err))\n    }, [])\n\n    if(redirect) {\n        return (\n            <Redirect to={BASE_URL}/>\n        )\n    }\n    return (\n        <Container>\n        <Form action=\"\" className=\"add-item-form\" onSubmit={e=> postItem(e)} encType=\"multipart/form-data\">\n            <input type=\"file\" ref={ref} id=\"hidden\" onChange={(e) => {     \n                const file = e.target.files[0]\n                const reader = new FileReader()\n                reader.onload = (e) => {\n                    setPreviewPic(e.target.result)\n                }\n                reader.readAsDataURL(file)\n                setPic({selectedFile :e.target.files[0]})\n                } }/>\n            <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera}/></div>\n            {previewPic && <div className=\"image-preview\"><img src={previewPic} alt=\"loaded pic\" /></div>}\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret color=\"light\">\n                    {(categories.categories && categories.selected) || 'Category'} {/* Setting the select name based on selected category  */}\n                </DropdownToggle>\n                <DropdownMenu >\n                    {categories.categories && categories.categories.map((category, index) => (\n                        <DropdownItem key={index} onClick={handleSelect} value={category.name}> {category.name} </DropdownItem>\n                    ))}\n                </DropdownMenu>\n        </Dropdown>\n            <Input className=\"add-item-input\" name=\"name\" placeholder=\"Name of product\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" type=\"select\" name=\"condition\" onChange={e => handleChange(e)}>\n                <option value=\"condition\" disabled selected>Condition</option>\n                <option value=\"new\">New</option>\n                <option value=\"likeNew\">Like new</option>\n                <option value=\"good\">Good</option>\n                <option value=\"used\">Used</option>               \n            </Input>\n            <Input className=\"add-item-input\" type=\"number\" name=\"price\" placeholder=\"Price\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"description\" placeholder=\"Description\" onChange={e => handleChange(e)}/>\n            <Button color=\"light\" type=\"submit\"> Add an item </Button>\n        </Form>\n    </Container>\n    )\n}\n\nexport default AddItem","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/URLs.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx",["100","101","102","103"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/UserCoins.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":36,"column":6,"nodeType":"110","endLine":36,"endColumn":24,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":23,"column":8,"nodeType":"110","endLine":23,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":21,"column":32,"nodeType":"116","messageId":"117","endLine":21,"endColumn":34},{"ruleId":"108","severity":1,"message":"118","line":32,"column":22,"nodeType":"119","endLine":32,"endColumn":34},{"ruleId":"108","severity":1,"message":"120","line":34,"column":15,"nodeType":"121","endLine":46,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":39,"column":36,"nodeType":"116","messageId":"117","endLine":39,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":13,"column":12,"nodeType":"124","messageId":"125","endLine":13,"endColumn":21},{"ruleId":"122","severity":1,"message":"126","line":13,"column":23,"nodeType":"124","messageId":"125","endLine":13,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":21,"column":34,"nodeType":"116","messageId":"117","endLine":21,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":56,"column":19,"nodeType":"116","messageId":"117","endLine":56,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":57,"column":25,"nodeType":"116","messageId":"117","endLine":57,"endColumn":27},{"ruleId":"122","severity":1,"message":"127","line":1,"column":29,"nodeType":"124","messageId":"125","endLine":1,"endColumn":38},{"ruleId":"122","severity":1,"message":"128","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":19},{"ruleId":"122","severity":1,"message":"129","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":13},{"ruleId":"122","severity":1,"message":"130","line":12,"column":8,"nodeType":"124","messageId":"125","endLine":12,"endColumn":16},{"ruleId":"108","severity":1,"message":"131","line":64,"column":8,"nodeType":"110","endLine":64,"endColumn":10,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"133","line":12,"column":22,"nodeType":"124","messageId":"125","endLine":12,"endColumn":33},{"ruleId":"108","severity":1,"message":"120","line":39,"column":15,"nodeType":"121","endLine":45,"endColumn":6},{"ruleId":"108","severity":1,"message":"134","line":45,"column":8,"nodeType":"110","endLine":45,"endColumn":31,"suggestions":"135"},{"ruleId":"108","severity":1,"message":"118","line":45,"column":20,"nodeType":"119","endLine":45,"endColumn":30},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionID'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["139"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'soldItems' is assigned a value but never used.","Identifier","unusedVar","'setSoldItems' is assigned a value but never used.","'useEffect' is defined but never used.","'UserCoins' is defined but never used.","'axios' is defined but never used.","'BASE_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array. You can also do a functional update 'setCategories(c => ...)' if you only need 'categories' in the 'setCategories' call.",["140"],"'setLoggedIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'BASE_URL', 'loggedIn', and 'userToken'. Either include them or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [sessionID, token, userCoins]",{"range":"150","text":"151"},"Update the dependencies array to be: [userID]",{"range":"152","text":"153"},"Update the dependencies array to be: [categories]",{"range":"154","text":"155"},"Update the dependencies array to be: [BASE_URL, loggedIn, toggleFav, userToken]",{"range":"156","text":"157"},[1299,1317],"[sessionID, token, userCoins]",[761,763],"[userID]",[2582,2584],"[categories]",[2071,2094],"[BASE_URL, loggedIn, toggleFav, userToken]"]