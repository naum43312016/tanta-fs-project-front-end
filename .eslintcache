[{"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js":"1","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js":"2","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js":"3","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx":"4","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx":"5","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx":"6","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx":"7","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx":"8","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx":"9","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js":"10","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx":"11","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx":"12","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx":"13","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx":"14","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx":"15","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js":"16","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js":"17"},{"size":554,"mtime":1610909759769,"results":"18","hashOfConfig":"19"},{"size":1490,"mtime":1610979951941,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610736072307,"results":"21","hashOfConfig":"19"},{"size":1926,"mtime":1610979951942,"results":"22","hashOfConfig":"19"},{"size":1846,"mtime":1611003400928,"results":"23","hashOfConfig":"19"},{"size":2863,"mtime":1611000795316,"results":"24","hashOfConfig":"19"},{"size":2958,"mtime":1610979951944,"results":"25","hashOfConfig":"19"},{"size":4317,"mtime":1611003400928,"results":"26","hashOfConfig":"19"},{"size":664,"mtime":1610979956781,"results":"27","hashOfConfig":"19"},{"size":1953,"mtime":1610979951947,"results":"28","hashOfConfig":"19"},{"size":2380,"mtime":1610964774622,"results":"29","hashOfConfig":"19"},{"size":3289,"mtime":1611000795315,"results":"30","hashOfConfig":"19"},{"size":1191,"mtime":1610964774625,"results":"31","hashOfConfig":"19"},{"size":2381,"mtime":1610753299988,"results":"32","hashOfConfig":"19"},{"size":6283,"mtime":1610753299988,"results":"33","hashOfConfig":"19"},{"size":3020,"mtime":1611003448160,"results":"34","hashOfConfig":"19"},{"size":85,"mtime":1611003624734,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"137pv15",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/index.js",[],["82","83"],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/App.js",["84","85","86"],"import React, { useState, useEffect } from 'react';\nimport { Authentication } from './Contexts/Authentication';\nimport { Container, Navbar } from \"reactstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './Styles/App.css';\nimport Home from './Components/HomePage/Home';\nimport ProfileSettings from './Components/Profile/ProfileSettings';\nimport TopNavBar from './Components/NavBars/TopNavBar';\nimport MyItems from './Components/Profile/MyItems'\nimport AddItem from './Components/ItemPage/AddItem'\nimport ItemPage from './Components/ItemPage/ItemPage';\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false); // true just for now\n  const [adminConfirmation, setAdminConfirmation] = useState(false);\n  const token = localStorage.getItem('token') || null\n\n  useEffect(() => {\n    if(token) {\n      setAuthenticated(true)\n    }\n  }, [token])\n\n  return (\n    <Container fluid>\n      <Authentication.Provider value={{ authenticated, setAuthenticated }}>\n        <Router>\n          <TopNavBar />\n          <Switch>\n              <Route path=\"/add-item\" component={AddItem}/>\n              <Route path=\"/my-items\" component={MyItems}/>\n              <Route path=\"/settings\" component={ProfileSettings} />\n              <Route path=\"/item/:id\" component={ItemPage} />\n              <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </Authentication.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/reportWebVitals.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Home.jsx",["87"],"import React, { useEffect, useState } from 'react';\nimport { Row } from 'reactstrap';\nimport Filter from './Filter';\nimport ItemCard from './ItemCards';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\n\nexport const BASE_URL = process.env.REACT_APP_BASE_URL;\n\nconst Home = () => {\n    const [search, setSearch] = useState('');\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState('');\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => { //getting all items on first app render\n        axios.get(BASE_URL + '/home/get-all-items')\n            .then(res => setCards(res.data))\n            .catch(err => 'There was an issue fetching all the items');\n    }, [])\n\n    useEffect(() => { //fetching the right category\n        axios.get(BASE_URL + `/search/item?category=${category}&price=${price}&name=${search}`)\n            .then(res => setCards(res.data.items))\n            .catch(err => console.log('There was an issue fetching the items of the requested category'));\n    }, [category, price, search])\n\n    return (\n        <div>\n            <Row style={{ backgroundColor: \"#7AE582\", height: \"30px\" }} className=\"search-bar justify-content-center align-items-center\" />\n            <Filter category={category} setCategory={setCategory} setPrice={setPrice} setSearch={setSearch} />\n            <div className=\"category-title\">\n                <p className=\"mr-sm-5 mr-3\">{category === \"\" && price === \"\" ? \"All Items\" : category}</p>\n                {price === '' ? null : <>{category !== \"\" ? <p className=\"mr-sm-5 mr-3\">|</p> : null}<p>{price} <FontAwesomeIcon style={{ color: \"orange\", fontSize: \"20px\" }} icon={faCoins} /></p></>}\n            </div>\n            <ItemCard cards={cards} />\n        </div>\n    )\n}\n\nexport default Home;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/ProfileSettings.jsx",["88"],"import axios from 'axios';\nimport { useEffect, useState } from 'react'\nimport {Container,Form, Input, Button} from 'reactstrap'\nimport '../../Styles/ProfileSettings.css'\nimport {BASE_URL} from '../HomePage/Home'\n\nconst ProfileSettings = () => {\n    const [profileInfos, setProfileInfos] = useState(null)\n    const userID = localStorage.getItem('sessionID')\n\n    const handleChange = (e) => {\n        setProfileInfos({\n            ...profileInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/user/${userID}`)\n        .then(res => setProfileInfos(res.data))\n    }, [])\n\n    return (\n        <Container>\n            <Form action=\"\" className=\"settings-form\" onSubmit={e=> e.preventDefault()}>\n                <h3>Profile settings</h3>\n                <div className=\"user-coins\"> </div>\n                <Input className=\"settings-input\" name=\"firstName\" placeholder=\"First Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.firstName}/>\n                <Input className=\"settings-input\" name=\"lastName\" placeholder=\"Last Name\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.lastName}/>\n                <Input className=\"settings-input\" type=\"text\" name=\"address\" placeholder=\"Address\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.address}/>\n                <Input className=\"settings-input\" name=\"phone\" placeholder=\"Phone\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.phone}/>\n                <Input className=\"settings-input\" type=\"email\" name=\"email\" placeholder=\"Email\" onChange={e => handleChange(e)} value={profileInfos && profileInfos.email}/>\n                <Button color=\"light\" > Save </Button>\n            </Form>\n        </Container>\n    )\n\n}\n\nexport default ProfileSettings","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/Profile/MyItems.jsx",["89","90","91"],"import { Button } from \"reactstrap\"\nimport ItemCards from \"../HomePage/ItemCards\"\nimport '../../Styles/MyItems.css'\nimport { useState, useEffect } from \"react\"\nimport axios from 'axios';\nimport { BASE_URL } from '../HomePage/Home'\n\nconst MyItems = (props) => {\n    const [filter, setFilter] = useState(\"All\")\n    const [cards, setCards] = useState([]);\n    const [sellingItems, setSellingItems] = useState([]);\n    const [purchasedItems, setPurchasedItems] = useState([]);\n    const [favoriteItems, setFavoriteItems] = useState([]);\n    const [soldItems, setSoldItems] = useState([]);\n\n    const filterItems = (array) => {\n        let cardsArray = [];\n        axios.get('http://localhost:3001/home/get-all-items')\n        .then((res) => {\n            if (filter === \"All\") {\n                return setCards(res.data);\n            }\n            for (let i of array) {\n                res.data.forEach((item) => {\n                    if (item._id === i) {\n                        cardsArray.push(item);\n                    }\n                })\n            }\n            setCards(cardsArray);\n            console.log(cardsArray);\n        })\n        .catch(err => 'There was an issue fetching all the items');\n    }\n\n    useEffect(() => { //getting all items on first app render, we will change the link later\n        switch (filter) {\n            case \"All\": filterItems();\n            break;\n            case \"Offered\": filterItems(sellingItems);\n            break;\n            case \"Purchased\": filterItems(purchasedItems);\n            break;\n            case \"Saved\": filterItems(favoriteItems);\n            break;\n            case \"Sold\": filterItems(purchasedItems);\n            break;\n        }\n    }, [filter])\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/user/${localStorage.getItem('sessionID')}`) // Fetch user infos for fetching items\n            .then(res => {\n                setSellingItems(res.data.items);\n                setPurchasedItems(res.data.purchasedItems);\n                setFavoriteItems(res.data.favoriteItems);\n                setSoldItems(res.data.sold);\n            })\n    }, [filter])\n\n    return (\n        <div className=\"my-items-container mt-2\">\n            <div> </div>\n            <div className=\"items-filter\">\n                <Button color=\"light\" onClick={() => setFilter(\"All\")}> All </Button>\n                <Button color=\"light\" onClick={() => setFilter(\"Offered\")}> Offered </Button>\n                <Button color=\"light\" onClick={() => setFilter(\"Saved\")}> Saved </Button>\n                <Button color=\"light\" onClick={() => setFilter(\"Purchased\")}> Purshased </Button>\n                <Button color=\"light\" onClick={() => setFilter(\"Sold\")}> Sold </Button>\n            </div>\n            <h3 className=\"mt-2\">{filter}</h3>\n            <ItemCards cards={cards} />\n        </div>\n    )\n}\n\nexport default MyItems","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/NavBars/TopNavBar.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/AddItem.jsx",["92","93","94"],"import { faCamera} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react'\nimport {Container,Form, Input, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport '../../Styles/AddItem.css'\nimport { invalidFields } from '../../Tools/WebsiteResponses';\nimport { itemUploaded } from '../../Tools/WebsiteResponses';\nimport {Redirect} from 'react-router'\nimport {BASE_URL} from '../HomePage/Home'\n\nconst AddItem = () => {\n    const [itemInfos, setItemInfos] = useState(null)\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [categories, setCategories] = useState({categories: null, selected: null})\n    const [pic, setPic] = useState({selectedFile: null})\n    const [redirect, setRedirect] = useState(false) // in case of success\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n    const ref = useRef(null)\n\n    const handleChange = (e) => {\n        setItemInfos({\n            ...itemInfos,\n            [e.target.name] : e.target.value\n        })\n    }\n    const imageUploadStyle = {\n        color: \"#4a81ff\", \n        fontSize: \"35px\",\n    }\n\n    const handleSelect = (e) => {\n        setCategories({...categories, selected: e.target.value})\n        setItemInfos({...itemInfos, category: e.target.value})\n    }\n\n    const postItem = (e) => {\n        e.preventDefault()\n        const data = new FormData()\n        for(let key in itemInfos) {\n            data.append(key, itemInfos[key])\n        }\n        if(pic.selectedFile) {\n            data.append('image', pic.selectedFile, `${Date.now()}-${pic.selectedFile.name}`)\n        }\n        axios.post(`${BASE_URL}/item`, data, {headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}})\n            .then(itemUploaded().then(setRedirect(true))) // if success so set success & redirect to homepage\n            .catch(err => {\n                // fetch error message from server\n                const error = err.response.data \n                const errorMessages = error.message || error.category || error.name || error.condition || error.description || error.price \n                invalidFields(errorMessages) // else show error message\n            })\n    }\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/category/all`)\n        .then(res => setCategories({...categories, categories: res.data}))\n        .catch(err => console.error(err))\n    }, [])\n\n    if(redirect) {\n        return (\n            <Redirect to={BASE_URL}/>\n        )\n    }\n    return (\n        <Container>\n        <Form action=\"\" className=\"add-item-form\" onSubmit={e=> postItem(e)} encType=\"multipart/form-data\">\n            <input type=\"file\" ref={ref} id=\"hidden\" onChange={(e) => {                  \n                setPic({selectedFile :e.target.files[0]})\n                } }/>\n            <div className=\"image-upload\" onClick={() => ref.current.click()}><FontAwesomeIcon style={imageUploadStyle} icon={faCamera}/></div>\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                <DropdownToggle caret color=\"light\">\n                    {categories.categories && categories.selected || 'Category'} {/* Setting the select name based on selected category  */}\n                </DropdownToggle>\n                <DropdownMenu >\n                    {categories.categories && categories.categories.map((category, index) => (\n                        <DropdownItem key={index} onClick={handleSelect} value={category.name}> {category.name} </DropdownItem>\n                    ))}\n                </DropdownMenu>\n        </Dropdown>\n            <Input className=\"add-item-input\" name=\"name\" placeholder=\"Name of product\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"condition\" placeholder=\"Contition\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" type=\"number\" name=\"price\" placeholder=\"Price\" onChange={e => handleChange(e)}/>\n            <Input className=\"add-item-input\" name=\"description\" placeholder=\"Description\" onChange={e => handleChange(e)}/>\n            <Button color=\"light\" type=\"submit\"> Add an item </Button>\n        </Form>\n    </Container>\n    )\n}\n\nexport default AddItem","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemPage.jsx",["95"],"import React, { useEffect, useState } from 'react';\nimport { Row, Container } from 'reactstrap';\nimport ItemDetails from './ItemDetails';\nimport axios from 'axios';\nimport {BASE_URL} from '../HomePage/Home'\n\nconst ItemPage = () => {\n    const [item, setItem] = useState([]);\n\n    useEffect(() => {\n        axios.get(BASE_URL + window.location.pathname)\n        .then(res => setItem(res.data))\n        .then(err => console.log(\"Couldn't get item\"));\n    }, [])\n\n    return (\n        <Container className=\"item\">\n            <p className=\"item-title mb-5\">{item.name}</p>\n            <ItemDetails item={item} />\n        </Container>\n    )\n}\n\nexport default ItemPage;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/WebsiteResponses.js",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/Filter.jsx",[],"/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/HomePage/ItemCards.jsx",["96","97","98","99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Card, CardBody, CardTitle, CardSubtitle, CardText, CardImg, Button, CardFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Pic from \"./971c17c93f74bc7280e285153b2e1ace-700.jpg\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as solidHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as regularHeart } from \"@fortawesome/fontawesome-free-regular\";\n\nconst ItemCard = (props) => {\n    const [favoriteItems, setFavoriteItems] = useState([]);\n    const BASE_URL = process.env.REACT_APP_BASE_URL;\n\n    const addItemToFavorites = (item) => {\n        axios.post(BASE_URL + `/item/${item._id}/favorite`, { headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') } })\n            .then(res => console.log(res))\n            .catch(err => console.log(\"Couldn't save the item\"));\n    }\n\n    const removeItemFromFavorites = () => {\n\n    }\n\n    return (\n        <div>\n            <div style={{ width: \"80%\", marginLeft: \"10%\" }} className=\"card-container mt-5 mb-5\">\n                {props.cards.map((item) => {\n                    return (<div key={item._id} id={item._id} style={{ backgroundColor: \"#F7F7F7\" }}>\n                        <Link to={{ pathname: `/item/${item._id}`, state: item._id }}  >\n                            <div style={{ width: \"100%\", height: \"200px\", backgroundImage: `url(${item.imageUrl})` }} className=\"card-img\" top width=\"100%\" alt={item.name} />\n                        </Link>\n                        <CardBody className=\"overflow-dots\">\n                            <Row>\n                                <CardTitle tag=\"h5\" className=\"col-10\">{item.name}</CardTitle>\n                                <p>{item.price} <FontAwesomeIcon style={{ color: \"orange\", fontSize: \"20px\" }} icon={faCoins} /></p>\n                            </Row>\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{item.condition}</CardSubtitle>\n                            <CardText style={{ wordBreak: \"break-word\" }}>{item.description}</CardText>\n                            <footer>\n                                <div className=\"align-items-center justify-content-end d-flex\">\n                                    {!favoriteItems.includes(`${item._id}`) ? <p style={{ fontSize: \"18px\", margin: \"0\" }} className=\"mr-2\">Save</p> : <p style={{ fontSize: \"18px\", margin: \"0\" }} className=\"mr-2\">Unsave</p>}\n                                    {!favoriteItems.includes(`${item._id}`) ? <FontAwesomeIcon color=\"red\" style={{ cursor: \"pointer\", fontSize: \"25px\" }} onClick={() => addItemToFavorites(item)} cldivassName=\"mr-2 awesome-icon\" icon={regularHeart}></FontAwesomeIcon> : <FontAwesomeIcon style={{ cursor: \"pointer\", fontSize: \"25px\" }} color=\"red\" onClick={() => removeItemFromFavorites(item)} className=\" awesome-icon\" icon={solidHeart}></FontAwesomeIcon>}\n                                </div>\n                            </footer>\n                        </CardBody>\n                    </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default ItemCard;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/ItemPage/ItemDetails.jsx",["104","105","106"],"import { Row, Container, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\n\nconst ItemDetails = (props) => {\n\n    return (\n        <div className=\"item-info\">\n            <img src={props.item.imageUrl} style={{ maxWidth: \"80%\", maxHeight: \"300px\" }} className=\"rounded mb-4\"></img>\n            <div classNameName=\"mt-5 item-text\">\n                <div>\n                    <Row style={{ width: \"80%\" }} className=\"mb-2 align-items-center\">\n                        <h3 className=\"col-6\">{props.item.condition}</h3>\n                        <h5>{props.item.price} <FontAwesomeIcon style={{ color: \"orange\", fontSize: \"20px\" }} icon={faCoins} className=\"ml-2\" /></h5>\n                    </Row>\n                    <h5 className=\"mb-3\">{props.item.category}</h5>\n                    <p>{props.item.description}</p>\n                    <a href={props.item.imageUrl} target=\"_blank\"><i></i>Full Image</a>\n                </div>\n                <Button color=\"primary\" className=\"mt-3 ml-n1 d-block border\">Purchase</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default ItemDetails;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/Login.jsx",["107","108","109"],"import React, { useEffect } from \"react\";\nimport { Container, Form, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter, Row } from \"reactstrap\";\nimport { useContext, useState } from \"react\";\nimport { Link, Router } from \"react-router-dom\";\nimport { SignIn } from '../../Tools/fetch';\nimport { Authentication } from '../../Contexts/Authentication';\n\nconst Login = (props) => {\n  const { authenticated, setAuthenticated }  = useContext(Authentication);\n  const [userInfos, setUserInfos] = useState({\n    email: '',\n    password: '',\n  })\n\n  const switchToSignUp = () => {\n    props.setOpenLogin(false);\n    props.setOpenSignup(true);\n    setUserInfos({\n      ...userInfos,\n      email: '',\n      password: '',\n    })\n    };\n  \n  const handleChange = (event) => {\n    setUserInfos({\n      ...userInfos,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const LoginUser = () => {\n    const userDetails = { ...userInfos, role: \"USER_STATUS\" }\n    SignIn(userDetails, setAuthenticated)\n  };\n\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-end\">\n        <Link to=\"/home\">\n          <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenLogin(false)}>\n            X\n        </Button>\n        </Link>\n      </Row>\n    <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Login</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              onChange={(event) => handleChange(event)}\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"example@something.com\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              onChange={(event) => handleChange(event)}\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={LoginUser} color=\"success\">\n          Login\n          </Button>\n        <Link to=\"/signup\">\n          <Button onClick={switchToSignUp} color=\"success\">\n            I Don't Have An Account Yet\n          </Button>\n        </Link>\n      </ModalFooter>\n\n\n    </Container>\n  );\n};\n\nexport default Login;\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Components/LoginPage/SignUp.jsx",["110","111","112","113"],"import React, { useEffect } from \"react\";\nimport { Form, Container, Row, Label, Input, FormGroup, Button, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useContext, useState } from \"react\";\nimport { Link, Router } from \"react-router-dom\";\nimport { Signup } from '../../Tools/fetch';\nimport { Authentication } from '../../Contexts/Authentication';\nimport { invalidFields } from '../../Tools/WebsiteResponses';\n\nconst SignUp = (props) => {\n  const [userInfos, setUserInfos] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    userName: '',\n    address: '',\n    confirmPassword: '',\n  })\n  const { setAuthenticated } = useContext(Authentication);\n\n  const switchToLogin = () => {\n    props.setOpenSignup(false);\n    props.setOpenLogin(true);\n    setUserInfos(null)\n  };\n\n  const submitUser = () => {\n    if (userInfos.password === userInfos.confirmPassword) {\n    const userDetails = {...userInfos}\n    Signup(userDetails, setAuthenticated);\n    } else {\n      invalidFields(\"Passwords didn't match\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setUserInfos({\n      ...userInfos,\n      [e.target.name] : e.target.value\n    })\n  }\n  \n  useEffect(() => {\n    console.log(setAuthenticated)\n  }, [])\n\n  return (\n        <Container>\n              <Row className=\"d-flex justify-content-end\">\n                <Link to=\"/home\">\n                <Button color=\"danger mr-3 mt-3\" onClick={() => props.setOpenSignup(false)}>\n                  X\n                </Button>\n                </Link>\n              </Row>\n              <ModalHeader style={{backgroundColor: \"#B1DEF5\"}} className=\"mt-n4\">Create Account</ModalHeader>\n              <ModalBody>\n                <Form>\n                  <div className=\"d-flex flex-row\">\n                    <FormGroup>\n                      <Label for=\"firstName\">First Name <span style={{color: \"red\"}}>*</span></Label>\n                      <Input\n                      required\n                        onChange={(event) => handleChange(event)}\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstname\"\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label className=\"ml-3\" for=\"lastName\">\n                        Last Name <span style={{color: \"red\"}}>*</span>\n                      </Label>\n                      <Input\n                      required\n                        className=\"ml-3\"\n                        onChange={(event) => handleChange(event)}\n                        type=\"text\"\n                          name=\"lastName\"\n                          id=\"lastname\"\n                      />\n                    </FormGroup>\n                  </div>\n                  <FormGroup>\n                    <Label for=\"email\">Email <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"example@something.com\"\n                      id=\"email\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"username\">Username <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"text\"\n                      name=\"userName\"\n                      placeholder=\"Please choose a username\"\n                      id=\"username\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"address\">Address <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"text\"\n                      name=\"address\"\n                      placeholder=\"Enter your address\"\n                      id=\"address\"\n                    />\n                  </FormGroup>\n                  \n                  <FormGroup>\n                    <Label for=\"password\">Password <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"min 8 char, 1 special char, 1 capital letter\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"password-confirm\">Confirm Password <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"password\"\n                      name=\"confirmPassword\"\n                      id=\"confirmPassword\"\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"phone\">Phone Number <span style={{color: \"red\"}}>*</span></Label>\n                    <Input\n                    required\n                      onChange={(event) => handleChange(event)}\n                      type=\"tel\"\n                      name=\"phone\"\n                      id=\"phoneNumber\"\n                    />\n                  </FormGroup>\n                </Form>\n              </ModalBody>\n              <ModalFooter>\n                  <Button color=\"primary\" disabled={(userInfos.firstName.length > 0 && userInfos.lastName.length > 0 && userInfos.email.length > 0 && userInfos.password.length > 0 && userInfos.confirmPassword.length > 0 && userInfos.phone.length > 0) ? false : true} onClick={submitUser} color=\"success\">\n                    Sign Up\n                  </Button>\n                  <Link to=\"/login\">\n                  <Button color=\"primary\" onClick={switchToLogin} color=\"success\">\n                    I Already Have An Account\n                  </Button>\n                  </Link>\n              </ModalFooter>\n            </Container>\n  );\n};\n\nexport default SignUp;","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Tools/fetch.js",["114"],"import {BASE_URL as base_URL} from '../Components/HomePage/Home'\nconst axios = require('axios');\nconst { invalidFields, wrongCredentials, signUpSucces, signInSuccess, updatedProfile } = require('./WebsiteResponses');\n\nconst validateEmail = (email) => {\n  const re = /\\S+@\\S+\\.\\S+/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst checkFields = (userDetails) => {\n  const { firstName, lastName, email, password, phone } = userDetails;\n  if (firstName.length <= 2 || lastName.length <= 2) {\n    return invalidFields('First and last name should contain at least 2 characters');\n  }\n  if (!validateEmail(email)) {\n    return invalidFields(\"Please use a valid email address\");\n  }\n  if (password.length >= 6 && password.length <= 32) {\n    return invalidFields(\"Please keep your password length between 6 and 32 characters\");\n  }\n  if (phone.length < 10) {\n    return invalidFields(\"Please enter a valid phone number\")\n  }\n  return true;\n}\n\n\nconst Signup = (userDetails, setAuthenticated) => {\n  if (checkFields(userDetails) === true) {\n    return axios.post(`${base_URL}/signup`, userDetails)\n      .then(\n        (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signUpSucces(), localStorage.setItem('firstName', res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\n                  setAuthenticated(true)) : null\n      )\n      .catch(err => console.error(err))\n  }\n};\n\nconst SignIn = (userDetails, setAuthenticated) => {\n  return axios.post(`${base_URL}/login`, userDetails)\n    .then(\n      (res) => res.status === 200 ? (localStorage.setItem(\"token\", res.data.token), signInSuccess(), localStorage.setItem(\"firstName\", res.data.user.firstName), localStorage.setItem(\"sessionID\", res.data.user._id),\n      setAuthenticated(true)) : null\n    )\n    .catch((err) => console.error(err));\n};\n\n\nconst getCookies = (setAuthenticated) => {\n  const token = localStorage.getItem(\"token\");\n  const config = { headers: { Authorization: \"Bearer \" + token } }\n  return axios.get(base_URL + \"/\", config)\n    .then(res =>\n      res.status === 200\n        ? (setAuthenticated(true))\n        : console.log(\"Couldn't authenticate\")\n    )\n    .catch((err) => console.log(err));\n};\n\nconst checkForAdmin = (setState, bool, bool2) => {\n  const token = localStorage.getItem(\"token\");\n  const config = { headers: { Authorization: \"Bearer \" + token } }\n  axios.get(base_URL +  '/upload', config)\n    .then(res => setState(bool))\n    .catch(err => setState(bool2))\n}\n\nconst submitProfileChanges = (details, userDocument) => {\n  if (checkFields(details) === true) {\n    console.log('ho')\n    axios.put(base_URL + `/profile/${userDocument._id}`, {\n      details\n    })\n      .then(res => updatedProfile(\"Profile updated\", \"success\"))\n      .catch(err => updatedProfile(\"There was an issue updating your profile\", \"error\"));\n  }\n}\n\nexport {  Signup, \n          SignIn, \n          getCookies, \n          validateEmail, \n          checkForAdmin, \n          submitProfileChanges,\n        }\n","/home/burslf/ITC/Tanta/tanta-fs-project-front-end/src/Contexts/Authentication.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":21,"nodeType":"121","messageId":"122","endLine":3,"endColumn":27},{"ruleId":"119","severity":1,"message":"123","line":15,"column":10,"nodeType":"121","messageId":"122","endLine":15,"endColumn":27},{"ruleId":"119","severity":1,"message":"124","line":15,"column":29,"nodeType":"121","messageId":"122","endLine":15,"endColumn":49},{"ruleId":"119","severity":1,"message":"125","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":21,"column":8,"nodeType":"128","endLine":21,"endColumn":10,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":14,"column":12,"nodeType":"121","messageId":"122","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":37,"column":9,"nodeType":"133","messageId":"134","endLine":48,"endColumn":10},{"ruleId":"126","severity":1,"message":"135","line":49,"column":8,"nodeType":"128","endLine":49,"endColumn":16,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"137","line":62,"column":8,"nodeType":"128","endLine":62,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":78,"column":44,"nodeType":"141","messageId":"142","endLine":78,"endColumn":46},{"ruleId":"139","severity":1,"message":"140","line":78,"column":67,"nodeType":"141","messageId":"142","endLine":78,"endColumn":69},{"ruleId":"119","severity":1,"message":"143","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":13},{"ruleId":"119","severity":1,"message":"144","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"145","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":19},{"ruleId":"119","severity":1,"message":"146","line":2,"column":26,"nodeType":"121","messageId":"122","endLine":2,"endColumn":30},{"ruleId":"119","severity":1,"message":"147","line":2,"column":77,"nodeType":"121","messageId":"122","endLine":2,"endColumn":84},{"ruleId":"119","severity":1,"message":"148","line":2,"column":86,"nodeType":"121","messageId":"122","endLine":2,"endColumn":92},{"ruleId":"119","severity":1,"message":"149","line":2,"column":94,"nodeType":"121","messageId":"122","endLine":2,"endColumn":104},{"ruleId":"119","severity":1,"message":"150","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":11},{"ruleId":"119","severity":1,"message":"151","line":12,"column":27,"nodeType":"121","messageId":"122","endLine":12,"endColumn":43},{"ruleId":"119","severity":1,"message":"145","line":1,"column":15,"nodeType":"121","messageId":"122","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":9,"column":13,"nodeType":"154","endLine":9,"endColumn":117},{"ruleId":"155","severity":1,"message":"156","line":18,"column":21,"nodeType":"154","endLine":18,"endColumn":67},{"ruleId":"119","severity":1,"message":"144","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"157","line":4,"column":16,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"158","line":9,"column":11,"nodeType":"121","messageId":"122","endLine":9,"endColumn":24},{"ruleId":"119","severity":1,"message":"157","line":4,"column":16,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"126","severity":1,"message":"159","line":46,"column":6,"nodeType":"128","endLine":46,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":153,"column":289,"nodeType":"163","endLine":153,"endColumn":304},{"ruleId":"161","severity":1,"message":"162","line":157,"column":67,"nodeType":"163","endLine":157,"endColumn":82},{"ruleId":"119","severity":1,"message":"164","line":3,"column":24,"nodeType":"121","messageId":"122","endLine":3,"endColumn":40},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'adminConfirmation' is assigned a value but never used.","'setAdminConfirmation' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'soldItems' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'favoriteItems', 'filterItems', 'purchasedItems', and 'sellingItems'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array. You can also do a functional update 'setCategories(c => ...)' if you only need 'categories' in the 'setCategories' call.",["169"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Row' is defined but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardImg' is defined but never used.","'Button' is defined but never used.","'CardFooter' is defined but never used.","'Pic' is defined but never used.","'setFavoriteItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Router' is defined but never used.","'authenticated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setAuthenticated'. Either include it or remove the dependency array.",["170"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'wrongCredentials' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [userID]",{"range":"179","text":"180"},"Update the dependencies array to be: [favoriteItems, filter, filterItems, purchasedItems, sellingItems]",{"range":"181","text":"182"},"Update the dependencies array to be: [categories]",{"range":"183","text":"184"},"Update the dependencies array to be: [setAuthenticated]",{"range":"185","text":"186"},[635,637],"[userID]",[1705,1713],"[favoriteItems, filter, filterItems, purchasedItems, sellingItems]",[2517,2519],"[categories]",[1263,1265],"[setAuthenticated]"]